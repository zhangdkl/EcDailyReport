2021-05-03 17:56:11,812 - logger - INFO - 开始提取单井参数数据！
2021-05-03 18:19:24,292 - logger - INFO - 开始提取单井参数数据！
2021-05-03 18:19:24,421 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 419, in extract_well_parameter_data
    extractwellparameterdata(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 265, in extractwellparameterdata
    realtimedata = realtimedata.encode('latin1').decode('gbk')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 5465, in __getattr__
    return object.__getattribute__(self, name)
AttributeError: 'DataFrame' object has no attribute 'encode'

2021-05-03 18:33:07,582 - logger - INFO - 开始提取单井参数数据！
2021-05-03 18:40:07,692 - logger - INFO - 开始提取单井参数数据！
2021-05-03 18:40:57,031 - logger - INFO - 开始提取单井参数数据！
2021-05-03 18:46:47,758 - logger - INFO - 开始提取单井参数数据！
2021-05-04 10:23:50,487 - logger - INFO - 开始提取单井参数数据！
2021-05-04 12:04:36,522 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (207, b"Invalid column name 'JLFS'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (207, b"Invalid column name 'JLFS'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 651, in extract_well_dynamic_static_data
    extractwelldynamicstaticdata(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 673, in extractwelldynamicstaticdata
    staticdata = pd.read_sql(get_data_sql, GlOBAL_mssql_engine)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 527, in read_sql
    chunksize=chunksize,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1308, in read_query
    result = self.execute(*args)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1176, in execute
    return self.connectable.execution_options().execute(*args, **kwargs)
  File "<string>", line 2, in execute
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\deprecations.py", line 390, in warned
    return fn(*args, **kwargs)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3038, in execute
    return connection.execute(statement, *multiparams, **params)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1191, in execute
    future=False,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1492, in _exec_driver_sql
    distilled_parameters,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b"Invalid column name 'JLFS'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")
[SQL: SELECT RQ, JH, DWMC, CYQ, DYFS, CXFS, SCFS, ISCX, JB, SCZT, ZYLX, JLFS FROM ecsjb WHERE RQ >= '2021-04-24 00:00:00']
(Background on this error at: http://sqlalche.me/e/14/f405)

2021-05-04 12:17:48,267 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (1919, b"Column 'JH' in table 'EcWellHisData' is of a type that is invalid for use as a key column in an index.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 478, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.OperationalError: (1919, b"Column 'JH' in table 'EcWellHisData' is of a type that is invalid for use as a key column in an index.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 651, in extract_well_dynamic_static_data
    extractwelldynamicstaticdata(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 689, in extractwelldynamicstaticdata
    staticdata.to_sql(tablename, GlOBAL_mssql_engine, if_exists='replace')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1406, in to_sql
    table.create()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 741, in create
    self._execute_create()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 733, in _execute_create
    self.table.create()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\schema.py", line 943, in create
    bind._run_ddl_visitor(ddl.SchemaGenerator, self, checkfirst=checkfirst)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3009, in _run_ddl_visitor
    conn._run_ddl_visitor(visitorcallable, element, **kwargs)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 2017, in _run_ddl_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\visitors.py", line 483, in traverse_single
    return meth(obj, **kw)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\ddl.py", line 902, in visit_table
    self.traverse_single(index, create_ok=True)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\visitors.py", line 483, in traverse_single
    return meth(obj, **kw)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\ddl.py", line 933, in visit_index
    self.connection.execute(CreateIndex(index))
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\ddl.py", line 78, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1297, in _execute_ddl
    compiled,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 478, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.OperationalError: (pymssql._pymssql.OperationalError) (1919, b"Column 'JH' in table 'EcWellHisData' is of a type that is invalid for use as a key column in an index.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")
[SQL: CREATE INDEX [ix_EcWellHisData_JH] ON [EcWellHisData] ([JH])]
(Background on this error at: http://sqlalche.me/e/14/e3q8)

2021-05-04 12:38:22,925 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (208, b"Invalid object name 'EcWellHisData'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (208, b"Invalid object name 'EcWellHisData'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 651, in extract_well_dynamic_static_data
    extractwelldynamicstaticdata(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 673, in extractwelldynamicstaticdata
    staticdata = pd.read_sql(get_data_sql, GlOBAL_mssql_engine)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 527, in read_sql
    chunksize=chunksize,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1308, in read_query
    result = self.execute(*args)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1176, in execute
    return self.connectable.execution_options().execute(*args, **kwargs)
  File "<string>", line 2, in execute
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\deprecations.py", line 390, in warned
    return fn(*args, **kwargs)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3038, in execute
    return connection.execute(statement, *multiparams, **params)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1191, in execute
    future=False,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1492, in _exec_driver_sql
    distilled_parameters,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (208, b"Invalid object name 'EcWellHisData'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")
[SQL: SELECT RQ, JH, DWMC, CYQ, DYFS, CXFS, SCFS, ISCX, JB, SCZT, ZYLX, JLFS FROM EcWellHisData WHERE RQ >= '2021-04-24 00:00:00']
(Background on this error at: http://sqlalche.me/e/14/f405)

2021-05-04 12:57:55,812 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (207, b"Invalid column name 'RQ'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/serverbacup.py", line 292, in executesql
    cursor.execute(sql)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (207, b"Invalid column name 'RQ'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

2021-05-04 12:57:56,359 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (207, b"Invalid column name 'RQ'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/serverbacup.py", line 292, in executesql
    cursor.execute(sql)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (207, b"Invalid column name 'RQ'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

2021-05-04 12:57:56,460 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/serverbacup.py", line 3480, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/serverbacup.py", line 3454, in extracterchangwelldynicurvedata
    dynamicdata.to_sql(tablename, GlOBAL_mssql_engine, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1934, in _handle_dbapi_exception
    util.raise_(exc_info[1], with_traceback=exc_info[2])
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1252, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1274, in pymssql._mssql.MSSQLConnection.format_sql_command
  File "src\pymssql\_mssql.pyx", line 2041, in pymssql._mssql._substitute_params
  File "src\pymssql\_mssql.pyx", line 2018, in pymssql._mssql._quote_data
  File "src\pymssql\_mssql.pyx", line 1988, in pymssql._mssql._quote_or_flatten
  File "src\pymssql\_mssql.pyx", line 1951, in pymssql._mssql._quote_simple_value
UnicodeEncodeError: 'gbk' codec can't encode character '\xb9' in position 2: illegal multibyte sequence

2021-05-04 12:58:52,065 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (208, b"Invalid object name 'EcWellHisData'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/serverbacup.py", line 292, in executesql
    cursor.execute(sql)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (208, b"Invalid object name 'EcWellHisData'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

2021-05-04 12:58:54,192 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (1919, b"Column 'JH' in table 'EcWellHisData' is of a type that is invalid for use as a key column in an index.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 478, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.OperationalError: (1919, b"Column 'JH' in table 'EcWellHisData' is of a type that is invalid for use as a key column in an index.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/serverbacup.py", line 3480, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/serverbacup.py", line 3454, in extracterchangwelldynicurvedata
    dynamicdata.to_sql(tablename, GlOBAL_mssql_engine, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1406, in to_sql
    table.create()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 747, in create
    self._execute_create()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 733, in _execute_create
    self.table.create()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\schema.py", line 943, in create
    bind._run_ddl_visitor(ddl.SchemaGenerator, self, checkfirst=checkfirst)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3009, in _run_ddl_visitor
    conn._run_ddl_visitor(visitorcallable, element, **kwargs)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 2017, in _run_ddl_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\visitors.py", line 483, in traverse_single
    return meth(obj, **kw)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\ddl.py", line 902, in visit_table
    self.traverse_single(index, create_ok=True)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\visitors.py", line 483, in traverse_single
    return meth(obj, **kw)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\ddl.py", line 933, in visit_index
    self.connection.execute(CreateIndex(index))
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\ddl.py", line 78, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1297, in _execute_ddl
    compiled,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 478, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.OperationalError: (pymssql._pymssql.OperationalError) (1919, b"Column 'JH' in table 'EcWellHisData' is of a type that is invalid for use as a key column in an index.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")
[SQL: CREATE INDEX [ix_EcWellHisData_JH] ON [EcWellHisData] ([JH])]
(Background on this error at: http://sqlalche.me/e/14/e3q8)

2021-05-04 13:00:10,392 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (208, b"Invalid object name 'EcWellHisData'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/serverbacup.py", line 292, in executesql
    cursor.execute(sql)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (208, b"Invalid object name 'EcWellHisData'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

2021-05-04 13:00:10,495 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (1919, b"Column 'JH' in table 'EcWellHisData' is of a type that is invalid for use as a key column in an index.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 478, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.OperationalError: (1919, b"Column 'JH' in table 'EcWellHisData' is of a type that is invalid for use as a key column in an index.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/serverbacup.py", line 3480, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/serverbacup.py", line 3454, in extracterchangwelldynicurvedata
    dynamicdata.to_sql(tablename, GlOBAL_mssql_engine, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1406, in to_sql
    table.create()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 747, in create
    self._execute_create()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 733, in _execute_create
    self.table.create()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\schema.py", line 943, in create
    bind._run_ddl_visitor(ddl.SchemaGenerator, self, checkfirst=checkfirst)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3009, in _run_ddl_visitor
    conn._run_ddl_visitor(visitorcallable, element, **kwargs)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 2017, in _run_ddl_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\visitors.py", line 483, in traverse_single
    return meth(obj, **kw)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\ddl.py", line 902, in visit_table
    self.traverse_single(index, create_ok=True)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\visitors.py", line 483, in traverse_single
    return meth(obj, **kw)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\ddl.py", line 933, in visit_index
    self.connection.execute(CreateIndex(index))
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\ddl.py", line 78, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1297, in _execute_ddl
    compiled,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 478, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.OperationalError: (pymssql._pymssql.OperationalError) (1919, b"Column 'JH' in table 'EcWellHisData' is of a type that is invalid for use as a key column in an index.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")
[SQL: CREATE INDEX [ix_EcWellHisData_JH] ON [EcWellHisData] ([JH])]
(Background on this error at: http://sqlalche.me/e/14/e3q8)

2021-05-04 13:00:57,254 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (208, b"Invalid object name 'EcWellHisData'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/serverbacup.py", line 3480, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/serverbacup.py", line 3422, in extracterchangwelldynicurvedata
    staticdata = getdatasql(SqlserverDataServre, get_data_sql)
  File "C:/PyWorkbench/EcDailyReport/serverbacup.py", line 154, in getdatasql
    cursor.execute(sql)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (208, b"Invalid object name 'EcWellHisData'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

2021-05-04 13:01:29,492 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (208, b"Invalid object name 'EcWellHisData'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/serverbacup.py", line 3480, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/serverbacup.py", line 3422, in extracterchangwelldynicurvedata
    staticdata = getdatasql(SqlserverDataServre, get_data_sql)
  File "C:/PyWorkbench/EcDailyReport/serverbacup.py", line 154, in getdatasql
    cursor.execute(sql)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (208, b"Invalid object name 'EcWellHisData'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

2021-05-04 13:02:34,202 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (208, b"Invalid object name 'EcWellHisData'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/serverbacup.py", line 3482, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/serverbacup.py", line 3424, in extracterchangwelldynicurvedata
    staticdata = getdatasql(SqlserverDataServre, get_data_sql)
  File "C:/PyWorkbench/EcDailyReport/serverbacup.py", line 154, in getdatasql
    cursor.execute(sql)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (208, b"Invalid object name 'EcWellHisData'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

2021-05-04 13:03:29,000 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (208, b"Invalid object name 'EcWellHisData'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/serverbacup.py", line 3481, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/serverbacup.py", line 3423, in extracterchangwelldynicurvedata
    staticdata = getdatasql(SqlserverDataServre, get_data_sql)
  File "C:/PyWorkbench/EcDailyReport/serverbacup.py", line 154, in getdatasql
    cursor.execute(sql)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (208, b"Invalid object name 'EcWellHisData'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

2021-05-04 13:04:36,757 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (207, b"Invalid column name 'JH'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\nDB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\nDB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\nDB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\nDB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\nDB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\nDB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\nDB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\nDB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\nDB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\nDB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/serverbacup.py", line 3481, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/serverbacup.py", line 3423, in extracterchangwelldynicurvedata
    staticdata = getdatasql(SqlserverDataServre, get_data_sql)
  File "C:/PyWorkbench/EcDailyReport/serverbacup.py", line 154, in getdatasql
    cursor.execute(sql)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (207, b"Invalid column name 'JH'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\nDB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\nDB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\nDB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\nDB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\nDB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\nDB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\nDB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\nDB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\nDB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\nDB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

2021-05-04 13:05:48,232 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/serverbacup.py", line 3481, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/serverbacup.py", line 3455, in extracterchangwelldynicurvedata
    dynamicdata.to_sql(tablename, GlOBAL_mssql_engine, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1934, in _handle_dbapi_exception
    util.raise_(exc_info[1], with_traceback=exc_info[2])
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1252, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1274, in pymssql._mssql.MSSQLConnection.format_sql_command
  File "src\pymssql\_mssql.pyx", line 2041, in pymssql._mssql._substitute_params
  File "src\pymssql\_mssql.pyx", line 2018, in pymssql._mssql._quote_data
  File "src\pymssql\_mssql.pyx", line 1988, in pymssql._mssql._quote_or_flatten
  File "src\pymssql\_mssql.pyx", line 1951, in pymssql._mssql._quote_simple_value
UnicodeEncodeError: 'gbk' codec can't encode character '\xb9' in position 2: illegal multibyte sequence

2021-05-04 13:06:24,704 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/serverbacup.py", line 3484, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/serverbacup.py", line 3458, in extracterchangwelldynicurvedata
    dynamicdata.to_sql(tablename, GlOBAL_mssql_engine, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1934, in _handle_dbapi_exception
    util.raise_(exc_info[1], with_traceback=exc_info[2])
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1252, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1274, in pymssql._mssql.MSSQLConnection.format_sql_command
  File "src\pymssql\_mssql.pyx", line 2041, in pymssql._mssql._substitute_params
  File "src\pymssql\_mssql.pyx", line 2018, in pymssql._mssql._quote_data
  File "src\pymssql\_mssql.pyx", line 1988, in pymssql._mssql._quote_or_flatten
  File "src\pymssql\_mssql.pyx", line 1951, in pymssql._mssql._quote_simple_value
UnicodeEncodeError: 'gbk' codec can't encode character '\xb9' in position 2: illegal multibyte sequence

2021-05-04 13:10:44,282 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 271, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 453, in extracterchangwelldynicurvedata
    dynamicdata.to_sql(tablename, GlOBAL_mssql_engine, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1934, in _handle_dbapi_exception
    util.raise_(exc_info[1], with_traceback=exc_info[2])
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1252, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1274, in pymssql._mssql.MSSQLConnection.format_sql_command
  File "src\pymssql\_mssql.pyx", line 2041, in pymssql._mssql._substitute_params
  File "src\pymssql\_mssql.pyx", line 2018, in pymssql._mssql._quote_data
  File "src\pymssql\_mssql.pyx", line 1988, in pymssql._mssql._quote_or_flatten
  File "src\pymssql\_mssql.pyx", line 1951, in pymssql._mssql._quote_simple_value
UnicodeEncodeError: 'gbk' codec can't encode character '\xb9' in position 2: illegal multibyte sequence

2021-05-04 13:16:05,877 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 271, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 454, in extracterchangwelldynicurvedata
    executesql(SqlserverDataServre, del_data_sql)
NameError: name 'SqlserverDataServre' is not defined

2021-05-04 13:16:48,804 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 271, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 460, in extracterchangwelldynicurvedata
    dynamicdata.to_sql(tablename, GlOBAL_mssql_engine, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1934, in _handle_dbapi_exception
    util.raise_(exc_info[1], with_traceback=exc_info[2])
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1252, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1274, in pymssql._mssql.MSSQLConnection.format_sql_command
  File "src\pymssql\_mssql.pyx", line 2076, in pymssql._mssql._substitute_params
  File "src\pymssql\_mssql.pyx", line 243, in pymssql._mssql.ensure_bytes
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xb9 in position 2: invalid start byte

2021-05-04 13:17:46,252 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 271, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 460, in extracterchangwelldynicurvedata
    dynamicdata.to_sql(tablename, GlOBAL_mssql_engine, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1934, in _handle_dbapi_exception
    util.raise_(exc_info[1], with_traceback=exc_info[2])
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1252, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1274, in pymssql._mssql.MSSQLConnection.format_sql_command
  File "src\pymssql\_mssql.pyx", line 2076, in pymssql._mssql._substitute_params
  File "src\pymssql\_mssql.pyx", line 243, in pymssql._mssql.ensure_bytes
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xb9 in position 2: invalid start byte

2021-05-04 13:26:42,229 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 271, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 460, in extracterchangwelldynicurvedata
    dynamicdata.to_sql(tablename, GlOBAL_mssql_engine, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1934, in _handle_dbapi_exception
    util.raise_(exc_info[1], with_traceback=exc_info[2])
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1252, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1274, in pymssql._mssql.MSSQLConnection.format_sql_command
  File "src\pymssql\_mssql.pyx", line 2076, in pymssql._mssql._substitute_params
  File "src\pymssql\_mssql.pyx", line 243, in pymssql._mssql.ensure_bytes
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xb9 in position 2: invalid start byte

2021-05-04 13:29:30,612 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 275, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 464, in extracterchangwelldynicurvedata
    dynamicdata.to_sql(tablename, GlOBAL_mssql_engine, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1934, in _handle_dbapi_exception
    util.raise_(exc_info[1], with_traceback=exc_info[2])
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1252, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1274, in pymssql._mssql.MSSQLConnection.format_sql_command
  File "src\pymssql\_mssql.pyx", line 2076, in pymssql._mssql._substitute_params
  File "src\pymssql\_mssql.pyx", line 243, in pymssql._mssql.ensure_bytes
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xb9 in position 2: invalid start byte

2021-05-04 13:32:34,913 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 275, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 464, in extracterchangwelldynicurvedata
    dynamicdata.to_sql(tablename, GlOBAL_mssql_engine, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1934, in _handle_dbapi_exception
    util.raise_(exc_info[1], with_traceback=exc_info[2])
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1252, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1274, in pymssql._mssql.MSSQLConnection.format_sql_command
  File "src\pymssql\_mssql.pyx", line 2076, in pymssql._mssql._substitute_params
  File "src\pymssql\_mssql.pyx", line 243, in pymssql._mssql.ensure_bytes
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xb9 in position 2: invalid start byte

2021-05-04 13:37:01,749 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 275, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 469, in extracterchangwelldynicurvedata
    dynamicdata = changeencode(dynamicdata, )
TypeError: changeencode() missing 1 required positional argument: 'cols'

2021-05-04 13:37:45,535 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 275, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 468, in extracterchangwelldynicurvedata
    dynamicdata = changeencode(dynamicdata, dynamicdata.columns)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 465, in changeencode
    data[col] = data[col].str.decode('iso-8859-1').str.encode('utf-8')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 5461, in __getattr__
    return object.__getattribute__(self, name)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\accessor.py", line 180, in __get__
    accessor_obj = self._accessor(obj)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\strings\accessor.py", line 154, in __init__
    self._inferred_dtype = self._validate(data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\strings\accessor.py", line 217, in _validate
    raise AttributeError("Can only use .str accessor with string values!")
AttributeError: Can only use .str accessor with string values!

2021-05-04 13:38:05,324 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 275, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 468, in extracterchangwelldynicurvedata
    dynamicdata = changeencode(dynamicdata, dynamicdata.columns)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 465, in changeencode
    data[col] = data[col].str.decode('iso-8859-1').encode('utf-8')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 5461, in __getattr__
    return object.__getattribute__(self, name)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\accessor.py", line 180, in __get__
    accessor_obj = self._accessor(obj)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\strings\accessor.py", line 154, in __init__
    self._inferred_dtype = self._validate(data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\strings\accessor.py", line 217, in _validate
    raise AttributeError("Can only use .str accessor with string values!")
AttributeError: Can only use .str accessor with string values!

2021-05-04 13:38:44,834 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 275, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 468, in extracterchangwelldynicurvedata
    dynamicdata = changeencode(dynamicdata, dynamicdata.columns)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 465, in changeencode
    data[col] = data[col].str.decode('latin1').encode('utf-8')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 5461, in __getattr__
    return object.__getattribute__(self, name)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\accessor.py", line 180, in __get__
    accessor_obj = self._accessor(obj)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\strings\accessor.py", line 154, in __init__
    self._inferred_dtype = self._validate(data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\strings\accessor.py", line 217, in _validate
    raise AttributeError("Can only use .str accessor with string values!")
AttributeError: Can only use .str accessor with string values!

2021-05-13 10:11:53,303 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 275, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 447, in extracterchangwelldynicurvedata
    dynamicdata.to_sql(tablename, GlOBAL_mssql_engine, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1934, in _handle_dbapi_exception
    util.raise_(exc_info[1], with_traceback=exc_info[2])
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1252, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1274, in pymssql._mssql.MSSQLConnection.format_sql_command
  File "src\pymssql\_mssql.pyx", line 2076, in pymssql._mssql._substitute_params
  File "src\pymssql\_mssql.pyx", line 243, in pymssql._mssql.ensure_bytes
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xb9 in position 2: invalid start byte

2021-05-13 10:13:35,638 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 275, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 447, in extracterchangwelldynicurvedata
    dynamicdata.to_sql(tablename, GlOBAL_mssql_engine, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1934, in _handle_dbapi_exception
    util.raise_(exc_info[1], with_traceback=exc_info[2])
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1252, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1274, in pymssql._mssql.MSSQLConnection.format_sql_command
  File "src\pymssql\_mssql.pyx", line 2076, in pymssql._mssql._substitute_params
  File "src\pymssql\_mssql.pyx", line 243, in pymssql._mssql.ensure_bytes
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xb9 in position 2: invalid start byte

2021-05-13 10:14:04,744 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 275, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 447, in extracterchangwelldynicurvedata
    dynamicdata.to_sql(tablename, GlOBAL_mssql_engine, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1934, in _handle_dbapi_exception
    util.raise_(exc_info[1], with_traceback=exc_info[2])
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1252, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1274, in pymssql._mssql.MSSQLConnection.format_sql_command
  File "src\pymssql\_mssql.pyx", line 2076, in pymssql._mssql._substitute_params
  File "src\pymssql\_mssql.pyx", line 243, in pymssql._mssql.ensure_bytes
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xb9 in position 2: invalid start byte

2021-05-13 10:15:49,522 - logger - INFO - Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 3080, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas\_libs\index.pyx", line 70, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 101, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 4554, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 4562, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'RCXL'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 275, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 321, in extracterchangwelldynicurvedata
    dynamicdata["XCB"] = dynamicdata["RCXL"] / dynamicdata["RCYL"]
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\frame.py", line 3024, in __getitem__
    indexer = self.columns.get_loc(key)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 3082, in get_loc
    raise KeyError(key) from err
KeyError: 'RCXL'

2021-05-13 10:16:07,072 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 275, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 451, in extracterchangwelldynicurvedata
    dynamicdata.to_sql(tablename, GlOBAL_mssql_engine, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1934, in _handle_dbapi_exception
    util.raise_(exc_info[1], with_traceback=exc_info[2])
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1252, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1274, in pymssql._mssql.MSSQLConnection.format_sql_command
  File "src\pymssql\_mssql.pyx", line 2076, in pymssql._mssql._substitute_params
  File "src\pymssql\_mssql.pyx", line 243, in pymssql._mssql.ensure_bytes
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xb9 in position 2: invalid start byte

2021-05-13 10:39:25,550 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 275, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 451, in extracterchangwelldynicurvedata
    dynamicdata.to_sql(tablename, GlOBAL_mssql_engine, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1934, in _handle_dbapi_exception
    util.raise_(exc_info[1], with_traceback=exc_info[2])
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1252, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1274, in pymssql._mssql.MSSQLConnection.format_sql_command
  File "src\pymssql\_mssql.pyx", line 2076, in pymssql._mssql._substitute_params
  File "src\pymssql\_mssql.pyx", line 243, in pymssql._mssql.ensure_bytes
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xb9 in position 2: invalid start byte

2021-05-13 10:41:13,426 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 275, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 451, in extracterchangwelldynicurvedata
    dynamicdata.to_sql(tablename, GlOBAL_mssql_engine, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1934, in _handle_dbapi_exception
    util.raise_(exc_info[1], with_traceback=exc_info[2])
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1252, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1274, in pymssql._mssql.MSSQLConnection.format_sql_command
  File "src\pymssql\_mssql.pyx", line 2076, in pymssql._mssql._substitute_params
  File "src\pymssql\_mssql.pyx", line 243, in pymssql._mssql.ensure_bytes
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xb9 in position 2: invalid start byte

2021-05-13 10:45:23,383 - logger - INFO - Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 3080, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas\_libs\index.pyx", line 70, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 101, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 4554, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 4562, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'RCXL'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 276, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 322, in extracterchangwelldynicurvedata
    dynamicdata["XCB"] = dynamicdata["RCXL"] / dynamicdata["RCYL"]
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\frame.py", line 3024, in __getitem__
    indexer = self.columns.get_loc(key)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 3082, in get_loc
    raise KeyError(key) from err
KeyError: 'RCXL'

2021-05-13 10:45:42,453 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 276, in extract_erchang_welldynicurve_data
    extracterchangwelldynicurvedata(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 338, in extracterchangwelldynicurvedata
    enleveldata = pd.read_sql(get_data_sql, GlOBAL_mssql_engine)
NameError: name 'GlOBAL_mssql_engine' is not defined

2021-05-14 10:30:04,250 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (207, b"Invalid column name 'JLFS'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (207, b"Invalid column name 'JLFS'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 274, in extract_erchang_well_relegation_data
    ExtractErchangWellRelegationData()
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 293, in ExtractErchangWellRelegationData
    staticdata = pd.read_sql(get_data_sql, GlOBAL_mssql_read_engine)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 527, in read_sql
    chunksize=chunksize,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1308, in read_query
    result = self.execute(*args)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1176, in execute
    return self.connectable.execution_options().execute(*args, **kwargs)
  File "<string>", line 2, in execute
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\deprecations.py", line 390, in warned
    return fn(*args, **kwargs)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3038, in execute
    return connection.execute(statement, *multiparams, **params)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1191, in execute
    future=False,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1492, in _exec_driver_sql
    distilled_parameters,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b"Invalid column name 'JLFS'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")
[SQL: SELECT RQ, JH, DWMC, CYQ, DYFS, CXFS, SCFS, ISCX, JB, SCZT, ZYLX, JLFS FROM ecsjb WHERE RQ >= '2021-05-04 00:00:00']
(Background on this error at: http://sqlalche.me/e/14/f405)

2021-05-14 10:31:18,640 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (207, b"Invalid column name 'JLFS'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (207, b"Invalid column name 'JLFS'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 274, in extract_erchang_well_relegation_data
    ExtractErchangWellRelegationData()
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 293, in ExtractErchangWellRelegationData
    staticdata = pd.read_sql(get_data_sql, GlOBAL_mssql_read_engine)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 527, in read_sql
    chunksize=chunksize,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1308, in read_query
    result = self.execute(*args)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1176, in execute
    return self.connectable.execution_options().execute(*args, **kwargs)
  File "<string>", line 2, in execute
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\deprecations.py", line 390, in warned
    return fn(*args, **kwargs)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3038, in execute
    return connection.execute(statement, *multiparams, **params)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1191, in execute
    future=False,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1492, in _exec_driver_sql
    distilled_parameters,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b"Invalid column name 'JLFS'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")
[SQL: SELECT RQ, JH, DWMC, CYQ, DYFS, CXFS, SCFS, ISCX, JB, SCZT, ZYLX, JLFS FROM ecsjb WHERE RQ >= '2021-05-04 00:00:00']
(Background on this error at: http://sqlalche.me/e/14/f405)

2021-05-14 10:55:53,034 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 274, in extract_erchang_well_relegation_data
    ExtractErchangWellRelegationData()
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 300, in ExtractErchangWellRelegationData
    staticdata["JH"] = staticdata["JH"].encode('latin1').decode('gbk')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 5465, in __getattr__
    return object.__getattribute__(self, name)
AttributeError: 'Series' object has no attribute 'encode'

2021-05-14 11:02:44,082 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 274, in extract_erchang_well_relegation_data
    ExtractErchangWellRelegationData()
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 300, in ExtractErchangWellRelegationData
    staticdata["JH"] = staticdata["JH"].str.encode('latin1').decode('gbk')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 5465, in __getattr__
    return object.__getattribute__(self, name)
AttributeError: 'Series' object has no attribute 'decode'

2021-05-14 16:44:12,840 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 299, in extract_erchang_well_relegation_data
    ExtractErchangWellRelegationData()
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 321, in ExtractErchangWellRelegationData
    staticdata.drop_duplicates(subset=["JH", "DWMC", "CYQ", "DYFS", "CXFS", "ZYLX", "JLFS"], keep='last', inplace=True)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\frame.py", line 5271, in drop_duplicates
    duplicated = self.duplicated(subset, keep=keep)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\frame.py", line 5405, in duplicated
    raise KeyError(diff)
KeyError: Index(['JLFS'], dtype='object')

2021-05-14 17:02:48,469 - logger - INFO - Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
cx_Oracle.DatabaseError: ORA-00942: 表或视图不存在

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 277, in extract_erchang_well_assay_data
    ExtractErchangWellAssayData(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 301, in ExtractErchangWellAssayData
    yemiandata = pd.read_sql(get_data_sql, GlOBAL_oracle_engine)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 527, in read_sql
    chunksize=chunksize,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1308, in read_query
    result = self.execute(*args)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1176, in execute
    return self.connectable.execution_options().execute(*args, **kwargs)
  File "<string>", line 2, in execute
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\deprecations.py", line 390, in warned
    return fn(*args, **kwargs)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3038, in execute
    return connection.execute(statement, *multiparams, **params)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1191, in execute
    future=False,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1492, in _exec_driver_sql
    distilled_parameters,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.DatabaseError: (cx_Oracle.DatabaseError) ORA-00942: 表或视图不存在
[SQL: SELECT JH, CSRQ, DYM, JYM FROM CJXT.YS_DCA03 WHERE CSRQ = TO_DATE('2021-05-13 00:00:00', 'yyyy-mm-dd,hh24:mi:ss')]
(Background on this error at: http://sqlalche.me/e/14/4xp6)

2021-05-14 17:17:05,689 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 281, in extract_erchang_well_assay_data
    ExtractErchangWellAssayData(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 308, in ExtractErchangWellAssayData
    yemiandata = yemiandata.set_index(["wellname", "date"])
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\frame.py", line 4727, in set_index
    raise KeyError(f"None of {missing} are in the columns")
KeyError: "None of ['wellname', 'date'] are in the columns"

2021-05-14 17:18:06,091 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 281, in extract_erchang_well_assay_data
    ExtractErchangWellAssayData(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 308, in ExtractErchangWellAssayData
    yemiandata = yemiandata.set_index(["wellname", "date"])
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\frame.py", line 4727, in set_index
    raise KeyError(f"None of {missing} are in the columns")
KeyError: "None of ['wellname', 'date'] are in the columns"

2021-05-14 17:38:16,498 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (207, b"Invalid column name 'RQ'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 132, in executesql
    cursor.execute(sql)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (207, b"Invalid column name 'RQ'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

2021-05-14 17:38:16,582 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (207, b"Invalid column name 'index'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (207, b"Invalid column name 'index'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 281, in extract_erchang_well_assay_data
    ExtractErchangWellAssayData(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 339, in ExtractErchangWellAssayData
    data.to_sql(tablename, GlOBAL_mssql_engine_UTF8, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1419, in to_sql
    raise err
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b"Invalid column name 'index'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")
[SQL: INSERT INTO [EcWellTest] ([index], wellname, date, dynamicfluidlevel, dynamicpressure, staticfluidlevel, staticpressure) VALUES (%(index)s, %(wellname)s, %(date)s, %(dynamicfluidlevel)s, %(dynamicpressure)s, %(staticfluidlevel)s, %(staticpressure)s)]
[parameters: ({'index': 0, 'wellname': 'TH10386', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 1868.0, 'dynamicpressure': '', 'staticfluidlevel': '', 'staticpressure': ''}, {'index': 1, 'wellname': 'TH12508', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 0.0, 'dynamicpressure': '', 'staticfluidlevel': '', 'staticpressure': ''}, {'index': 2, 'wellname': 'TH12537X', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 1607.0, 'dynamicpressure': '', 'staticfluidlevel': '', 'staticpressure': ''}, {'index': 3, 'wellname': 'TH12544', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 799.0, 'dynamicpressure': '', 'staticfluidlevel': '', 'staticpressure': ''}, {'index': 4, 'wellname': 'AD23CH', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 312.0, 'dynamicpressure': '', 'staticfluidlevel': '', 'staticpressure': ''}, {'index': 5, 'wellname': 'TH102109', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 766.0, 'dynamicpressure': '', 'staticfluidlevel': '', 'staticpressure': ''}, {'index': 6, 'wellname': 'TH102110', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 987.0, 'dynamicpressure': '', 'staticfluidlevel': '', 'staticpressure': ''}, {'index': 7, 'wellname': 'TH10232', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 0.0, 'dynamicpressure': '', 'staticfluidlevel': '', 'staticpressure': ''}  ... displaying 10 of 44 total bound parameter sets ...  {'index': 42, 'wellname': 'TP280', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 470.0, 'dynamicpressure': '', 'staticfluidlevel': '', 'staticpressure': ''}, {'index': 43, 'wellname': 'TP33', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 1895.0, 'dynamicpressure': '', 'staticfluidlevel': '', 'staticpressure': ''})]
(Background on this error at: http://sqlalche.me/e/14/f405)

2021-05-14 17:39:36,099 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (207, b"Invalid column name 'RQ'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 132, in executesql
    cursor.execute(sql)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (207, b"Invalid column name 'RQ'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

2021-05-14 17:39:36,195 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (2627, b"Violation of PRIMARY KEY constraint 'PK__EcWellTe__1B2E4929125EB334'. Cannot insert duplicate key in object 'dbo.EcWellTest'.DB-Lib error message 20018, severity 14:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 477, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.IntegrityError: (2627, b"Violation of PRIMARY KEY constraint 'PK__EcWellTe__1B2E4929125EB334'. Cannot insert duplicate key in object 'dbo.EcWellTest'.DB-Lib error message 20018, severity 14:\nGeneral SQL Server error: Check messages from the SQL Server\n")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 281, in extract_erchang_well_assay_data
    ExtractErchangWellAssayData(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 339, in ExtractErchangWellAssayData
    data.to_sql(tablename, GlOBAL_mssql_engine_UTF8, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1419, in to_sql
    raise err
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 477, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.IntegrityError: (pymssql._pymssql.IntegrityError) (2627, b"Violation of PRIMARY KEY constraint 'PK__EcWellTe__1B2E4929125EB334'. Cannot insert duplicate key in object 'dbo.EcWellTest'.DB-Lib error message 20018, severity 14:\nGeneral SQL Server error: Check messages from the SQL Server\n")
[SQL: INSERT INTO [EcWellTest] (wellname, date, dynamicfluidlevel, dynamicpressure, staticfluidlevel, staticpressure) VALUES (%(wellname)s, %(date)s, %(dynamicfluidlevel)s, %(dynamicpressure)s, %(staticfluidlevel)s, %(staticpressure)s)]
[parameters: ({'wellname': 'TH10386', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 1868.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None}, {'wellname': 'TH12508', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 0.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None}, {'wellname': 'TH12537X', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 1607.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None}, {'wellname': 'TH12544', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 799.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None}, {'wellname': 'AD23CH', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 312.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None}, {'wellname': 'TH102109', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 766.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None}, {'wellname': 'TH102110', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 987.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None}, {'wellname': 'TH10232', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 0.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None}  ... displaying 10 of 44 total bound parameter sets ...  {'wellname': 'TP280', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 470.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None}, {'wellname': 'TP33', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 1895.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None})]
(Background on this error at: http://sqlalche.me/e/14/gkpj)

2021-05-14 17:41:35,516 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (207, b"Invalid column name 'RQ'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 132, in executesql
    cursor.execute(sql)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (207, b"Invalid column name 'RQ'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

2021-05-14 17:41:35,601 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (2627, b"Violation of PRIMARY KEY constraint 'PK__EcWellTe__1B2E4929125EB334'. Cannot insert duplicate key in object 'dbo.EcWellTest'.DB-Lib error message 20018, severity 14:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 477, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.IntegrityError: (2627, b"Violation of PRIMARY KEY constraint 'PK__EcWellTe__1B2E4929125EB334'. Cannot insert duplicate key in object 'dbo.EcWellTest'.DB-Lib error message 20018, severity 14:\nGeneral SQL Server error: Check messages from the SQL Server\n")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 281, in extract_erchang_well_assay_data
    ExtractErchangWellAssayData(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 339, in ExtractErchangWellAssayData
    data.to_sql(tablename, GlOBAL_mssql_engine_UTF8, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1419, in to_sql
    raise err
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 477, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.IntegrityError: (pymssql._pymssql.IntegrityError) (2627, b"Violation of PRIMARY KEY constraint 'PK__EcWellTe__1B2E4929125EB334'. Cannot insert duplicate key in object 'dbo.EcWellTest'.DB-Lib error message 20018, severity 14:\nGeneral SQL Server error: Check messages from the SQL Server\n")
[SQL: INSERT INTO [EcWellTest] (wellname, date, dynamicfluidlevel, dynamicpressure, staticfluidlevel, staticpressure) VALUES (%(wellname)s, %(date)s, %(dynamicfluidlevel)s, %(dynamicpressure)s, %(staticfluidlevel)s, %(staticpressure)s)]
[parameters: ({'wellname': 'TH10386', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 1868.0, 'dynamicpressure': '', 'staticfluidlevel': '', 'staticpressure': ''}, {'wellname': 'TH12508', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 0.0, 'dynamicpressure': '', 'staticfluidlevel': '', 'staticpressure': ''}, {'wellname': 'TH12537X', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 1607.0, 'dynamicpressure': '', 'staticfluidlevel': '', 'staticpressure': ''}, {'wellname': 'TH12544', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 799.0, 'dynamicpressure': '', 'staticfluidlevel': '', 'staticpressure': ''}, {'wellname': 'AD23CH', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 312.0, 'dynamicpressure': '', 'staticfluidlevel': '', 'staticpressure': ''}, {'wellname': 'TH102109', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 766.0, 'dynamicpressure': '', 'staticfluidlevel': '', 'staticpressure': ''}, {'wellname': 'TH102110', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 987.0, 'dynamicpressure': '', 'staticfluidlevel': '', 'staticpressure': ''}, {'wellname': 'TH10232', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 0.0, 'dynamicpressure': '', 'staticfluidlevel': '', 'staticpressure': ''}  ... displaying 10 of 44 total bound parameter sets ...  {'wellname': 'TP280', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 470.0, 'dynamicpressure': '', 'staticfluidlevel': '', 'staticpressure': ''}, {'wellname': 'TP33', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 1895.0, 'dynamicpressure': '', 'staticfluidlevel': '', 'staticpressure': ''})]
(Background on this error at: http://sqlalche.me/e/14/gkpj)

2021-05-14 17:43:06,666 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (207, b"Invalid column name 'RQ'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 132, in executesql
    cursor.execute(sql)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (207, b"Invalid column name 'RQ'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

2021-05-14 17:43:06,749 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (2627, b"Violation of PRIMARY KEY constraint 'PK__EcWellTe__1B2E4929125EB334'. Cannot insert duplicate key in object 'dbo.EcWellTest'.DB-Lib error message 20018, severity 14:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 477, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.IntegrityError: (2627, b"Violation of PRIMARY KEY constraint 'PK__EcWellTe__1B2E4929125EB334'. Cannot insert duplicate key in object 'dbo.EcWellTest'.DB-Lib error message 20018, severity 14:\nGeneral SQL Server error: Check messages from the SQL Server\n")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 281, in extract_erchang_well_assay_data
    ExtractErchangWellAssayData(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 339, in ExtractErchangWellAssayData
    data.to_sql(tablename, GlOBAL_mssql_engine_UTF8, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1419, in to_sql
    raise err
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 477, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.IntegrityError: (pymssql._pymssql.IntegrityError) (2627, b"Violation of PRIMARY KEY constraint 'PK__EcWellTe__1B2E4929125EB334'. Cannot insert duplicate key in object 'dbo.EcWellTest'.DB-Lib error message 20018, severity 14:\nGeneral SQL Server error: Check messages from the SQL Server\n")
[SQL: INSERT INTO [EcWellTest] (wellname, date, dynamicfluidlevel, dynamicpressure, staticfluidlevel, staticpressure) VALUES (%(wellname)s, %(date)s, %(dynamicfluidlevel)s, %(dynamicpressure)s, %(staticfluidlevel)s, %(staticpressure)s)]
[parameters: ({'wellname': 'TH10386', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 1868.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None}, {'wellname': 'TH12508', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 0.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None}, {'wellname': 'TH12537X', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 1607.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None}, {'wellname': 'TH12544', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 799.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None}, {'wellname': 'AD23CH', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 312.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None}, {'wellname': 'TH102109', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 766.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None}, {'wellname': 'TH102110', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 987.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None}, {'wellname': 'TH10232', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 0.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None}  ... displaying 10 of 44 total bound parameter sets ...  {'wellname': 'TP280', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 470.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None}, {'wellname': 'TP33', 'date': datetime.datetime(2021, 5, 13, 0, 0), 'dynamicfluidlevel': 1895.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None})]
(Background on this error at: http://sqlalche.me/e/14/gkpj)

2021-05-14 17:43:33,530 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (207, b"Invalid column name 'RQ'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 132, in executesql
    cursor.execute(sql)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (207, b"Invalid column name 'RQ'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

2021-05-14 17:43:33,613 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (2627, b"Violation of PRIMARY KEY constraint 'PK__EcWellTe__1B2E4929125EB334'. Cannot insert duplicate key in object 'dbo.EcWellTest'.DB-Lib error message 20018, severity 14:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 477, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.IntegrityError: (2627, b"Violation of PRIMARY KEY constraint 'PK__EcWellTe__1B2E4929125EB334'. Cannot insert duplicate key in object 'dbo.EcWellTest'.DB-Lib error message 20018, severity 14:\nGeneral SQL Server error: Check messages from the SQL Server\n")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 281, in extract_erchang_well_assay_data
    ExtractErchangWellAssayData(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 339, in ExtractErchangWellAssayData
    data.to_sql(tablename, GlOBAL_mssql_engine_UTF8, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1419, in to_sql
    raise err
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 477, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.IntegrityError: (pymssql._pymssql.IntegrityError) (2627, b"Violation of PRIMARY KEY constraint 'PK__EcWellTe__1B2E4929125EB334'. Cannot insert duplicate key in object 'dbo.EcWellTest'.DB-Lib error message 20018, severity 14:\nGeneral SQL Server error: Check messages from the SQL Server\n")
[SQL: INSERT INTO [EcWellTest] (date, wellname, dynamicfluidlevel, dynamicpressure, staticfluidlevel, staticpressure) VALUES (%(date)s, %(wellname)s, %(dynamicfluidlevel)s, %(dynamicpressure)s, %(staticfluidlevel)s, %(staticpressure)s)]
[parameters: ({'date': datetime.datetime(2021, 5, 13, 0, 0), 'wellname': 'TH10386', 'dynamicfluidlevel': 1868.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None}, {'date': datetime.datetime(2021, 5, 13, 0, 0), 'wellname': 'TH12508', 'dynamicfluidlevel': 0.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None}, {'date': datetime.datetime(2021, 5, 13, 0, 0), 'wellname': 'TH12537X', 'dynamicfluidlevel': 1607.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None}, {'date': datetime.datetime(2021, 5, 13, 0, 0), 'wellname': 'TH12544', 'dynamicfluidlevel': 799.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None}, {'date': datetime.datetime(2021, 5, 13, 0, 0), 'wellname': 'AD23CH', 'dynamicfluidlevel': 312.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None}, {'date': datetime.datetime(2021, 5, 13, 0, 0), 'wellname': 'TH102109', 'dynamicfluidlevel': 766.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None}, {'date': datetime.datetime(2021, 5, 13, 0, 0), 'wellname': 'TH102110', 'dynamicfluidlevel': 987.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None}, {'date': datetime.datetime(2021, 5, 13, 0, 0), 'wellname': 'TH10232', 'dynamicfluidlevel': 0.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None}  ... displaying 10 of 44 total bound parameter sets ...  {'date': datetime.datetime(2021, 5, 13, 0, 0), 'wellname': 'TP280', 'dynamicfluidlevel': 470.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None}, {'date': datetime.datetime(2021, 5, 13, 0, 0), 'wellname': 'TP33', 'dynamicfluidlevel': 1895.0, 'dynamicpressure': None, 'staticfluidlevel': None, 'staticpressure': None})]
(Background on this error at: http://sqlalche.me/e/14/gkpj)

2021-05-14 17:44:02,731 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (207, b"Invalid column name 'RQ'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 132, in executesql
    cursor.execute(sql)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (207, b"Invalid column name 'RQ'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

2021-05-14 17:44:02,963 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (207, b"Invalid column name 'RQ'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 132, in executesql
    cursor.execute(sql)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (207, b"Invalid column name 'RQ'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

2021-05-14 18:02:03,755 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 282, in extract_erchang_well_assay_data
    ExtractErchangWellIndicatorData(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 368, in ExtractErchangWellIndicatorData
    gongtu = [x.split(",") for x in gongtu.split(";")]
AttributeError: 'NoneType' object has no attribute 'split'

2021-05-14 18:14:15,925 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 282, in extract_erchang_well_assay_data
    ExtractErchangWellIndicatorData(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 402, in ExtractErchangWellIndicatorData
    load = load.split(",")
AttributeError: 'NoneType' object has no attribute 'split'

2021-05-14 18:14:35,052 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 282, in extract_erchang_well_assay_data
    ExtractErchangWellIndicatorData(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 404, in ExtractErchangWellIndicatorData
    load = load.split(",")
AttributeError: 'NoneType' object has no attribute 'split'

2021-05-14 18:21:13,187 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 282, in extract_erchang_well_assay_data
    ExtractErchangWellIndicatorData(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 405, in ExtractErchangWellIndicatorData
    load = load.split(",")
AttributeError: 'NoneType' object has no attribute 'split'

2021-05-15 11:08:36,230 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractErchangWellAutoIndicatorData(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 405, in ExtractErchangWellAutoIndicatorData
    begintime = getbegintime(exhour, exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 190, in getbegintime
    StrBeginDay = time.strftime("%Y-%m-%d %H:%M:%S", DateBeginDay.timetuple())
AttributeError: 'str' object has no attribute 'timetuple'

2021-05-15 11:08:57,536 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractErchangWellAutoIndicatorData(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 405, in ExtractErchangWellAutoIndicatorData
    begintime = getbegintime(exhour, "hour")
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 190, in getbegintime
    StrBeginDay = time.strftime("%Y-%m-%d %H:%M:%S", DateBeginDay.timetuple())
AttributeError: 'str' object has no attribute 'timetuple'

2021-05-15 11:23:08,436 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractErchangWellAutoIndicatorData(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 424, in ExtractErchangWellAutoIndicatorData
    print(shicedata.groupby(["wellname"].count()))
TypeError: count() takes exactly one argument (0 given)

2021-05-15 11:23:57,146 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractErchangWellAutoIndicatorData(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 424, in ExtractErchangWellAutoIndicatorData
    print(shicedata.groupby(["wellname"].size()))
AttributeError: 'list' object has no attribute 'size'

2021-05-15 11:24:16,946 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractErchangWellAutoIndicatorData(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 424, in ExtractErchangWellAutoIndicatorData
    print(shicedata.groupby(["wellname"].count()))
TypeError: count() takes exactly one argument (0 given)

2021-05-15 11:25:25,426 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractErchangWellAutoIndicatorData(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 424, in ExtractErchangWellAutoIndicatorData
    print(shicedata.groupby(["wellname"].describe()))
AttributeError: 'list' object has no attribute 'describe'

2021-05-15 11:25:56,334 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractErchangWellAutoIndicatorData(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 425, in ExtractErchangWellAutoIndicatorData
    print(shicedata.groupby(["wellname",].describe()))
AttributeError: 'list' object has no attribute 'describe'

2021-05-15 11:26:11,845 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractErchangWellAutoIndicatorData(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 425, in ExtractErchangWellAutoIndicatorData
    print(shicedata.groupby(["wellname", "date"].describe()))
AttributeError: 'list' object has no attribute 'describe'

2021-05-15 11:26:21,620 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractErchangWellAutoIndicatorData(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 425, in ExtractErchangWellAutoIndicatorData
    print(shicedata.groupby(["wellname", "date"].count()))
TypeError: count() takes exactly one argument (0 given)

2021-05-15 11:26:41,192 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractErchangWellAutoIndicatorData(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 425, in ExtractErchangWellAutoIndicatorData
    print(shicedata.groupby(["wellname"]["date"].count()))
TypeError: list indices must be integers or slices, not str

2021-05-15 12:10:50,597 - logger - INFO - Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 3080, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas\_libs\index.pyx", line 70, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 101, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 4554, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 4562, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: ('stroke', 'speed')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 397, in extract_erchang_well_hour_monitor_data
    ExtractErchangWellAutoIndicatorData(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 425, in ExtractErchangWellAutoIndicatorData
    print(shicedata["stroke", "speed"])
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\frame.py", line 3024, in __getitem__
    indexer = self.columns.get_loc(key)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 3082, in get_loc
    raise KeyError(key) from err
KeyError: ('stroke', 'speed')

2021-05-15 12:11:05,248 - logger - INFO - Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 3080, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas\_libs\index.pyx", line 70, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 101, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 4554, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 4562, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: ('stroke', 'speed')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 397, in extract_erchang_well_hour_monitor_data
    ExtractErchangWellAutoIndicatorData(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 424, in ExtractErchangWellAutoIndicatorData
    print(shicedata["stroke", "speed"])
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\frame.py", line 3024, in __getitem__
    indexer = self.columns.get_loc(key)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 3082, in get_loc
    raise KeyError(key) from err
KeyError: ('stroke', 'speed')

2021-05-15 12:43:28,073 - logger - INFO - Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 3080, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas\_libs\index.pyx", line 70, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 101, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 4554, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 4562, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: ('stroke', 'speed')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 397, in extract_erchang_well_hour_monitor_data
    ExtractErchangWellAutoIndicatorData(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 426, in ExtractErchangWellAutoIndicatorData
    print(shicedata["stroke", "speed"].loc["AD2"])
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\frame.py", line 3024, in __getitem__
    indexer = self.columns.get_loc(key)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 3082, in get_loc
    raise KeyError(key) from err
KeyError: ('stroke', 'speed')

2021-05-15 19:38:56,476 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 397, in extract_erchang_well_hour_monitor_data
    ExtractErchangWellAutoIndicatorData(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 453, in ExtractErchangWellAutoIndicatorData
    shicedata = shicedata.set_index(["wellname"])
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\frame.py", line 4727, in set_index
    raise KeyError(f"None of {missing} are in the columns")
KeyError: "None of ['wellname'] are in the columns"

2021-05-15 23:30:40,784 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 397, in extract_erchang_well_hour_monitor_data
    ExtractErchangWellAutoIndicatorData(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 449, in ExtractErchangWellAutoIndicatorData
    maxload.append(load.max())
AttributeError: 'list' object has no attribute 'max'

2021-05-15 23:32:06,579 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 397, in extract_erchang_well_hour_monitor_data
    ExtractErchangWellAutoIndicatorData(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 454, in ExtractErchangWellAutoIndicatorData
    shicedata["maxload"] = maxload
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\frame.py", line 3163, in __setitem__
    self._set_item(key, value)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\frame.py", line 3242, in _set_item
    value = self._sanitize_column(key, value)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\frame.py", line 3899, in _sanitize_column
    value = sanitize_index(value, self.index)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\internals\construction.py", line 752, in sanitize_index
    "Length of values "
ValueError: Length of values (8) does not match length of index (10)

2021-05-15 23:51:49,054 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 397, in extract_erchang_well_hour_monitor_data
    ExtractErchangWellAutoIndicatorData(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 440, in ExtractErchangWellAutoIndicatorData
    load = load.split(",")
AttributeError: 'NoneType' object has no attribute 'split'

2021-05-15 23:53:19,534 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 398, in extract_erchang_well_hour_monitor_data
    ExtractErchangWellAutoIndicatorData(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 441, in ExtractErchangWellAutoIndicatorData
    load = load.split(",")
AttributeError: 'NoneType' object has no attribute 'split'

2021-05-15 23:53:26,195 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 398, in extract_erchang_well_hour_monitor_data
    ExtractErchangWellAutoIndicatorData(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 441, in ExtractErchangWellAutoIndicatorData
    load = load.split(",")
AttributeError: 'NoneType' object has no attribute 'split'

2021-05-15 23:53:33,022 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 398, in extract_erchang_well_hour_monitor_data
    ExtractErchangWellAutoIndicatorData(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 441, in ExtractErchangWellAutoIndicatorData
    load = load.split(",")
AttributeError: 'NoneType' object has no attribute 'split'

2021-05-15 23:53:54,991 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 398, in extract_erchang_well_hour_monitor_data
    ExtractErchangWellAutoIndicatorData(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 443, in ExtractErchangWellAutoIndicatorData
    load = load.split(",")
AttributeError: 'NoneType' object has no attribute 'split'

2021-05-15 23:56:01,053 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (8152, b'String or binary data would be truncated.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 478, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.OperationalError: (8152, b'String or binary data would be truncated.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 398, in extract_erchang_well_hour_monitor_data
    ExtractErchangWellAutoIndicatorData(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 467, in ExtractErchangWellAutoIndicatorData
    shicedata.to_sql(tablename, GlOBAL_mssql_engine_UTF8, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1419, in to_sql
    raise err
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 478, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.OperationalError: (pymssql._pymssql.OperationalError) (8152, b'String or binary data would be truncated.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n')
[SQL: INSERT INTO [EcWellIndicatorAutoHour] (wellname, date, stroke, speed, displacement, [load], maxload) VALUES (%(wellname)s, %(date)s, %(stroke)s, %(speed)s, %(displacement)s, %(load)s, %(maxload)s)]
[parameters: ({'wellname': 'AD2', 'date': '2021-05-09 22:00:00', 'stroke': 5.09, 'speed': 3.01, 'displacement': '0.000,0.000,0.006,0.014,0.025,0.037,0.055,0.076,0.101,0.128,0.159,0.192,0.229,0.269,0.312,0.357,0.406,0.456,0.510,0.566,0.624,0.684,0.747,0.811,0.877 ... (901 characters truncated) ... 0.875,0.814,0.754,0.696,0.640,0.585,0.532,0.481,0.432,0.385,0.340,0.298,0.258,0.221,0.186,0.154,0.125,0.099,0.075,0.055,0.038,0.024,0.014,0.006,0.001', 'load': '63.29,66.04,66.17,66.79,67.19,67.28,67.90,68.65,69.27,71.12,72.45,73.65,75.19,76.70,77.98,79.44,82.01,83.91,85.99,88.20,90.90,92.62,95.23,97.58,98.42 ... (901 characters truncated) ... 55.86,56.75,57.01,57.99,58.16,58.03,58.12,57.90,58.16,58.03,58.21,58.25,58.34,58.61,59.00,59.05,59.23,59.14,59.23,59.09,59.09,58.61,58.69,58.83,59.00', 'maxload': 98.42}, {'wellname': 'S74', 'date': '2021-05-09 22:00:00', 'stroke': 4.0, 'speed': 2.6, 'displacement': '0.007,0.013,0.021,0.031,0.043,0.057,0.073,0.090,0.110,0.132,0.155,0.180,0.207,0.236,0.267,0.299,0.333,0.369,0.406,0.445,0.486,0.528,0.571,0.616,0.662 ... (901 characters truncated) ... 0.483,0.445,0.407,0.371,0.336,0.303,0.271,0.241,0.212,0.185,0.160,0.136,0.115,0.094,0.076,0.060,0.045,0.032,0.022,0.014,0.008,0.004,0.001,0.001,0.003', 'load': '44.11,44.17,44.21,44.16,44.07,43.99,44.08,44.22,44.42,44.69,44.94,45.04,45.07,45.02,44.92,45.80,46.57,47.63,48.67,49.81,50.09,50.64,50.83,51.10,51.22 ... (901 characters truncated) ... 42.68,42.74,42.92,43.20,43.46,43.63,43.68,43.65,43.53,43.40,43.32,43.33,43.43,43.57,43.75,43.91,43.98,43.95,43.85,43.75,43.66,43.64,43.69,43.83,43.98', 'maxload': 51.22}, {'wellname': 'S75-2CH', 'date': '2021-05-09 22:00:00', 'stroke': 4.01, 'speed': 2.6, 'displacement': '0.014,0.027,0.047,0.071,0.099,0.130,0.165,0.201,0.238,0.279,0.322,0.366,0.412,0.460,0.507,0.558,0.609,0.661,0.714,0.768,0.822,0.878,0.934,0.989,1.045 ... (901 characters truncated) ... 1.548,1.474,1.401,1.325,1.250,1.173,1.094,1.014,0.934,0.850,0.766,0.681,0.594,0.506,0.417,0.330,0.250,0.179,0.120,0.074,0.042,0.021,0.008,0.003,0.006', 'load': '36.96,36.96,36.96,36.96,36.99,37.00,37.01,37.00,37.00,36.99,36.99,36.98,36.98,36.99,36.98,36.97,36.98,36.99,36.99,36.99,37.00,36.99,36.98,36.98,36.98 ... (901 characters truncated) ... 36.98,36.98,36.97,36.98,37.00,36.99,36.99,36.99,36.98,36.97,36.97,36.97,36.97,36.97,36.97,36.99,36.99,36.99,37.00,36.99,36.97,36.97,36.98,36.97,36.96', 'maxload': 37.02}, {'wellname': 'S80', 'date': '2021-05-09 22:00:00', 'stroke': 4.0, 'speed': 2.22, 'displacement': '0.001,0.003,0.005,0.009,0.015,0.021,0.030,0.039,0.050,0.062,0.076,0.091,0.107,0.126,0.146,0.167,0.191,0.216,0.242,0.271,0.301,0.333,0.366,0.401,0.438 ... (901 characters truncated) ... 0.169,0.154,0.139,0.127,0.115,0.105,0.095,0.086,0.077,0.068,0.060,0.052,0.045,0.038,0.031,0.025,0.020,0.015,0.011,0.007,0.004,0.002,0.001,0.000,0.000', 'load': '51.68,51.71,51.75,51.78,51.82,51.92,52.03,52.15,52.26,52.40,52.51,52.58,52.69,52.85,52.98,53.14,53.33,53.50,53.59,53.73,53.85,54.05,54.31,54.67,55.11 ... (901 characters truncated) ... 63.33,64.07,64.55,64.78,64.78,64.65,64.55,64.63,64.84,65.16,62.46,59.78,56.99,54.11,51.15,51.17,51.19,51.20,51.23,51.29,51.36,51.42,51.50,51.59,51.64', 'maxload': 65.87}, {'wellname': 'T6-433CX2', 'date': '2021-05-09 22:00:00', 'stroke': 4.0, 'speed': 2.4, 'displacement': '0.006,0.012,0.020,0.031,0.043,0.058,0.075,0.094,0.115,0.138,0.164,0.191,0.220,0.251,0.284,0.318,0.355,0.393,0.433,0.475,0.518,0.564,0.610,0.659,0.709 ... (901 characters truncated) ... 0.595,0.547,0.501,0.456,0.413,0.372,0.333,0.296,0.260,0.227,0.196,0.168,0.141,0.117,0.095,0.075,0.057,0.042,0.029,0.019,0.011,0.005,0.002,0.001,0.002', 'load': '64.69,64.74,64.94,65.34,65.82,66.27,66.86,67.54,68.21,68.95,69.84,70.66,71.53,72.46,73.48,74.56,75.73,76.96,78.23,79.57,81.01,82.49,83.94,85.42,86.90 ... (901 characters truncated) ... 62.86,62.45,62.10,62.03,62.21,62.57,62.97,63.44,63.76,63.84,63.80,63.62,63.43,63.26,63.28,63.44,63.77,64.18,64.63,64.99,65.19,65.25,65.12,64.94,64.78', 'maxload': 91.64}, {'wellname': 'T752CH', 'date': '2021-05-09 22:00:00', 'stroke': 4.0, 'speed': 2.6, 'displacement': '0.014,0.026,0.042,0.063,0.087,0.114,0.143,0.176,0.211,0.248,0.287,0.328,0.369,0.412,0.455,0.500,0.547,0.596,0.643,0.692,0.742,0.791,0.840,0.891,0.943 ... (901 characters truncated) ... 1.616,1.536,1.456,1.374,1.292,1.207,1.123,1.037,0.949,0.858,0.768,0.674,0.580,0.483,0.389,0.301,0.223,0.155,0.104,0.065,0.036,0.018,0.008,0.004,0.006', 'load': '80.19,80.19,80.18,80.17,80.17,80.18,80.17,80.18,80.18,80.18,80.16,80.18,80.17,80.18,80.18,80.20,80.18,80.19,80.18,80.18,80.17,80.17,80.16,80.16,80.16 ... (901 characters truncated) ... 80.13,80.13,80.13,80.13,80.15,80.17,80.18,80.19,80.18,80.17,80.16,80.16,80.15,80.16,80.17,80.17,80.17,80.18,80.17,80.16,80.17,80.17,80.17,80.19,80.20', 'maxload': 80.21}, {'wellname': 'TH10103CH2', 'date': '2021-05-09 22:00:00', 'stroke': 4.01, 'speed': 2.72, 'displacement': '0.005,0.009,0.016,0.023,0.033,0.044,0.057,0.072,0.089,0.107,0.126,0.147,0.170,0.195,0.221,0.248,0.278,0.308,0.341,0.374,0.409,0.445,0.483,0.522,0.563 ... (901 characters truncated) ... 0.378,0.348,0.319,0.292,0.265,0.239,0.215,0.191,0.169,0.148,0.128,0.109,0.092,0.076,0.062,0.049,0.037,0.027,0.019,0.012,0.007,0.003,0.001,0.001,0.002', 'load': '63.23,63.21,63.20,63.23,63.29,63.38,63.50,63.63,63.72,63.78,63.79,63.74,63.74,63.81,63.97,64.22,64.54,64.90,65.27,65.68,66.18,66.80,67.47,68.22,69.04 ... (901 characters truncated) ... 61.12,61.11,61.14,61.22,61.34,61.47,61.59,61.66,61.71,61.69,61.68,61.64,61.65,61.65,61.69,61.79,62.01,62.26,62.58,62.90,63.14,63.28,63.35,63.31,63.26', 'maxload': 77.54}, {'wellname': 'TH10104', 'date': '2021-05-09 22:00:00', 'stroke': 4.72, 'speed': 2.7, 'displacement': '0.000,0.000,0.001,0.010,0.018,0.037,0.049,0.080,0.099,0.139,0.165,0.216,0.242,0.303,0.338,0.408,0.448,0.483,0.527,0.565,0.612,0.702,0.753,0.851,0.897 ... (565 characters truncated) ... 1.168,1.113,0.996,0.933,0.824,0.766,0.718,0.664,0.620,0.568,0.479,0.433,0.354,0.321,0.254,0.221,0.165,0.137,0.095,0.078,0.046,0.032,0.014,0.007,0.003', 'load': '0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,47.79,48.58,49.07,50.17,51.14,52.64,53.17,52.78,5 ... (545 characters truncated) ... 44.57,44.39,44.79,44.83,45.32,45.41,45.23,45.23,45.27,44.88,45.05,45.23,45.36,45.71,45.49,45.58,45.45,45.23,45.63,45.58,46.02,45.93,45.93,46.07,45.85', 'maxload': 53.17}  ... displaying 10 of 113 total bound parameter sets ...  {'wellname': 'TK778X', 'date': '2021-05-09 22:00:00', 'stroke': 4.0, 'speed': 2.6, 'displacement': '0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.072,0.145,0.217,0.290,0.363,0.363,0.363,0.363,0.435,0.508,0.581 ... (901 characters truncated) ... 0.654,0.581,0.508,0.435,0.363,0.363,0.290,0.217,0.145,0.072,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000', 'load': '0.78,0.77,0.76,0.75,0.75,0.76,0.77,0.79,0.80,0.81,0.81,0.82,0.80,0.80,0.80,0.78,0.76,0.76,0.76,0.75,0.74,0.76,0.77,0.77,0.78,0.80,0.79,0.78,0.77,0.76 ... (701 characters truncated) ... 0.78,0.78,0.79,0.78,0.77,0.79,0.79,0.79,0.78,0.80,0.80,0.79,0.78,0.79,0.80,0.79,0.80,0.80,0.80,0.79,0.79,0.79,0.80,0.81,0.81,0.80,0.80,0.79,0.79,0.78', 'maxload': 0.82}, {'wellname': 'TK783X', 'date': '2021-05-09 22:00:00', 'stroke': 0.04, 'speed': 3.07, 'displacement': '0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.001,0.001,0.001,0.002,0.002,0.003,0.003,0.004,0.005,0.005,0.006,0.006,0.007,0.008,0.008,0.009,0.010 ... (565 characters truncated) ... 0.011,0.011,0.010,0.009,0.008,0.008,0.007,0.007,0.006,0.006,0.005,0.004,0.003,0.003,0.002,0.002,0.001,0.001,0.001,0.000,0.000,0.000,0.000,0.000,0.000', 'load': '64.20,64.29,64.33,64.59,64.86,65.34,65.38,65.34,65.56,65.38,65.34,66.65,67.09,67.57,67.75,68.40,69.63,70.33,70.77,71.12,71.73,72.30,72.26,71.86,71.86 ... (565 characters truncated) ... 64.20,64.02,63.94,63.67,62.89,62.93,63.06,63.37,63.50,63.67,64.24,64.55,64.42,64.11,63.89,63.81,63.72,63.81,64.51,64.77,64.94,64.94,64.90,64.59,64.42', 'maxload': 72.3})]
(Background on this error at: http://sqlalche.me/e/14/e3q8)

2021-05-15 23:56:19,725 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (8152, b'String or binary data would be truncated.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 478, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.OperationalError: (8152, b'String or binary data would be truncated.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 398, in extract_erchang_well_hour_monitor_data
    ExtractErchangWellAutoIndicatorData(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 467, in ExtractErchangWellAutoIndicatorData
    shicedata.to_sql(tablename, GlOBAL_mssql_engine_UTF8, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1419, in to_sql
    raise err
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 478, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.OperationalError: (pymssql._pymssql.OperationalError) (8152, b'String or binary data would be truncated.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n')
[SQL: INSERT INTO [EcWellIndicatorAutoHour] (wellname, date, stroke, speed, displacement, [load], maxload) VALUES (%(wellname)s, %(date)s, %(stroke)s, %(speed)s, %(displacement)s, %(load)s, %(maxload)s)]
[parameters: ({'wellname': 'AD2', 'date': '2021-05-09 22:00:00', 'stroke': 5.09, 'speed': 3.01, 'displacement': '0.000,0.000,0.006,0.014,0.025,0.037,0.055,0.076,0.101,0.128,0.159,0.192,0.229,0.269,0.312,0.357,0.406,0.456,0.510,0.566,0.624,0.684,0.747,0.811,0.877 ... (901 characters truncated) ... 0.875,0.814,0.754,0.696,0.640,0.585,0.532,0.481,0.432,0.385,0.340,0.298,0.258,0.221,0.186,0.154,0.125,0.099,0.075,0.055,0.038,0.024,0.014,0.006,0.001', 'load': '63.29,66.04,66.17,66.79,67.19,67.28,67.90,68.65,69.27,71.12,72.45,73.65,75.19,76.70,77.98,79.44,82.01,83.91,85.99,88.20,90.90,92.62,95.23,97.58,98.42 ... (901 characters truncated) ... 55.86,56.75,57.01,57.99,58.16,58.03,58.12,57.90,58.16,58.03,58.21,58.25,58.34,58.61,59.00,59.05,59.23,59.14,59.23,59.09,59.09,58.61,58.69,58.83,59.00', 'maxload': 98.42}, {'wellname': 'S74', 'date': '2021-05-09 22:00:00', 'stroke': 4.0, 'speed': 2.6, 'displacement': '0.007,0.013,0.021,0.031,0.043,0.057,0.073,0.090,0.110,0.132,0.155,0.180,0.207,0.236,0.267,0.299,0.333,0.369,0.406,0.445,0.486,0.528,0.571,0.616,0.662 ... (901 characters truncated) ... 0.483,0.445,0.407,0.371,0.336,0.303,0.271,0.241,0.212,0.185,0.160,0.136,0.115,0.094,0.076,0.060,0.045,0.032,0.022,0.014,0.008,0.004,0.001,0.001,0.003', 'load': '44.11,44.17,44.21,44.16,44.07,43.99,44.08,44.22,44.42,44.69,44.94,45.04,45.07,45.02,44.92,45.80,46.57,47.63,48.67,49.81,50.09,50.64,50.83,51.10,51.22 ... (901 characters truncated) ... 42.68,42.74,42.92,43.20,43.46,43.63,43.68,43.65,43.53,43.40,43.32,43.33,43.43,43.57,43.75,43.91,43.98,43.95,43.85,43.75,43.66,43.64,43.69,43.83,43.98', 'maxload': 51.22}, {'wellname': 'S75-2CH', 'date': '2021-05-09 22:00:00', 'stroke': 4.01, 'speed': 2.6, 'displacement': '0.014,0.027,0.047,0.071,0.099,0.130,0.165,0.201,0.238,0.279,0.322,0.366,0.412,0.460,0.507,0.558,0.609,0.661,0.714,0.768,0.822,0.878,0.934,0.989,1.045 ... (901 characters truncated) ... 1.548,1.474,1.401,1.325,1.250,1.173,1.094,1.014,0.934,0.850,0.766,0.681,0.594,0.506,0.417,0.330,0.250,0.179,0.120,0.074,0.042,0.021,0.008,0.003,0.006', 'load': '36.96,36.96,36.96,36.96,36.99,37.00,37.01,37.00,37.00,36.99,36.99,36.98,36.98,36.99,36.98,36.97,36.98,36.99,36.99,36.99,37.00,36.99,36.98,36.98,36.98 ... (901 characters truncated) ... 36.98,36.98,36.97,36.98,37.00,36.99,36.99,36.99,36.98,36.97,36.97,36.97,36.97,36.97,36.97,36.99,36.99,36.99,37.00,36.99,36.97,36.97,36.98,36.97,36.96', 'maxload': 37.02}, {'wellname': 'S80', 'date': '2021-05-09 22:00:00', 'stroke': 4.0, 'speed': 2.22, 'displacement': '0.001,0.003,0.005,0.009,0.015,0.021,0.030,0.039,0.050,0.062,0.076,0.091,0.107,0.126,0.146,0.167,0.191,0.216,0.242,0.271,0.301,0.333,0.366,0.401,0.438 ... (901 characters truncated) ... 0.169,0.154,0.139,0.127,0.115,0.105,0.095,0.086,0.077,0.068,0.060,0.052,0.045,0.038,0.031,0.025,0.020,0.015,0.011,0.007,0.004,0.002,0.001,0.000,0.000', 'load': '51.68,51.71,51.75,51.78,51.82,51.92,52.03,52.15,52.26,52.40,52.51,52.58,52.69,52.85,52.98,53.14,53.33,53.50,53.59,53.73,53.85,54.05,54.31,54.67,55.11 ... (901 characters truncated) ... 63.33,64.07,64.55,64.78,64.78,64.65,64.55,64.63,64.84,65.16,62.46,59.78,56.99,54.11,51.15,51.17,51.19,51.20,51.23,51.29,51.36,51.42,51.50,51.59,51.64', 'maxload': 65.87}, {'wellname': 'T6-433CX2', 'date': '2021-05-09 22:00:00', 'stroke': 4.0, 'speed': 2.4, 'displacement': '0.006,0.012,0.020,0.031,0.043,0.058,0.075,0.094,0.115,0.138,0.164,0.191,0.220,0.251,0.284,0.318,0.355,0.393,0.433,0.475,0.518,0.564,0.610,0.659,0.709 ... (901 characters truncated) ... 0.595,0.547,0.501,0.456,0.413,0.372,0.333,0.296,0.260,0.227,0.196,0.168,0.141,0.117,0.095,0.075,0.057,0.042,0.029,0.019,0.011,0.005,0.002,0.001,0.002', 'load': '64.69,64.74,64.94,65.34,65.82,66.27,66.86,67.54,68.21,68.95,69.84,70.66,71.53,72.46,73.48,74.56,75.73,76.96,78.23,79.57,81.01,82.49,83.94,85.42,86.90 ... (901 characters truncated) ... 62.86,62.45,62.10,62.03,62.21,62.57,62.97,63.44,63.76,63.84,63.80,63.62,63.43,63.26,63.28,63.44,63.77,64.18,64.63,64.99,65.19,65.25,65.12,64.94,64.78', 'maxload': 91.64}, {'wellname': 'T752CH', 'date': '2021-05-09 22:00:00', 'stroke': 4.0, 'speed': 2.6, 'displacement': '0.014,0.026,0.042,0.063,0.087,0.114,0.143,0.176,0.211,0.248,0.287,0.328,0.369,0.412,0.455,0.500,0.547,0.596,0.643,0.692,0.742,0.791,0.840,0.891,0.943 ... (901 characters truncated) ... 1.616,1.536,1.456,1.374,1.292,1.207,1.123,1.037,0.949,0.858,0.768,0.674,0.580,0.483,0.389,0.301,0.223,0.155,0.104,0.065,0.036,0.018,0.008,0.004,0.006', 'load': '80.19,80.19,80.18,80.17,80.17,80.18,80.17,80.18,80.18,80.18,80.16,80.18,80.17,80.18,80.18,80.20,80.18,80.19,80.18,80.18,80.17,80.17,80.16,80.16,80.16 ... (901 characters truncated) ... 80.13,80.13,80.13,80.13,80.15,80.17,80.18,80.19,80.18,80.17,80.16,80.16,80.15,80.16,80.17,80.17,80.17,80.18,80.17,80.16,80.17,80.17,80.17,80.19,80.20', 'maxload': 80.21}, {'wellname': 'TH10103CH2', 'date': '2021-05-09 22:00:00', 'stroke': 4.01, 'speed': 2.72, 'displacement': '0.005,0.009,0.016,0.023,0.033,0.044,0.057,0.072,0.089,0.107,0.126,0.147,0.170,0.195,0.221,0.248,0.278,0.308,0.341,0.374,0.409,0.445,0.483,0.522,0.563 ... (901 characters truncated) ... 0.378,0.348,0.319,0.292,0.265,0.239,0.215,0.191,0.169,0.148,0.128,0.109,0.092,0.076,0.062,0.049,0.037,0.027,0.019,0.012,0.007,0.003,0.001,0.001,0.002', 'load': '63.23,63.21,63.20,63.23,63.29,63.38,63.50,63.63,63.72,63.78,63.79,63.74,63.74,63.81,63.97,64.22,64.54,64.90,65.27,65.68,66.18,66.80,67.47,68.22,69.04 ... (901 characters truncated) ... 61.12,61.11,61.14,61.22,61.34,61.47,61.59,61.66,61.71,61.69,61.68,61.64,61.65,61.65,61.69,61.79,62.01,62.26,62.58,62.90,63.14,63.28,63.35,63.31,63.26', 'maxload': 77.54}, {'wellname': 'TH10104', 'date': '2021-05-09 22:00:00', 'stroke': 4.72, 'speed': 2.7, 'displacement': '0.000,0.000,0.001,0.010,0.018,0.037,0.049,0.080,0.099,0.139,0.165,0.216,0.242,0.303,0.338,0.408,0.448,0.483,0.527,0.565,0.612,0.702,0.753,0.851,0.897 ... (565 characters truncated) ... 1.168,1.113,0.996,0.933,0.824,0.766,0.718,0.664,0.620,0.568,0.479,0.433,0.354,0.321,0.254,0.221,0.165,0.137,0.095,0.078,0.046,0.032,0.014,0.007,0.003', 'load': '0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,47.79,48.58,49.07,50.17,51.14,52.64,53.17,52.78,5 ... (545 characters truncated) ... 44.57,44.39,44.79,44.83,45.32,45.41,45.23,45.23,45.27,44.88,45.05,45.23,45.36,45.71,45.49,45.58,45.45,45.23,45.63,45.58,46.02,45.93,45.93,46.07,45.85', 'maxload': 53.17}  ... displaying 10 of 113 total bound parameter sets ...  {'wellname': 'TK778X', 'date': '2021-05-09 22:00:00', 'stroke': 4.0, 'speed': 2.6, 'displacement': '0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.072,0.145,0.217,0.290,0.363,0.363,0.363,0.363,0.435,0.508,0.581 ... (901 characters truncated) ... 0.654,0.581,0.508,0.435,0.363,0.363,0.290,0.217,0.145,0.072,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000', 'load': '0.78,0.77,0.76,0.75,0.75,0.76,0.77,0.79,0.80,0.81,0.81,0.82,0.80,0.80,0.80,0.78,0.76,0.76,0.76,0.75,0.74,0.76,0.77,0.77,0.78,0.80,0.79,0.78,0.77,0.76 ... (701 characters truncated) ... 0.78,0.78,0.79,0.78,0.77,0.79,0.79,0.79,0.78,0.80,0.80,0.79,0.78,0.79,0.80,0.79,0.80,0.80,0.80,0.79,0.79,0.79,0.80,0.81,0.81,0.80,0.80,0.79,0.79,0.78', 'maxload': 0.82}, {'wellname': 'TK783X', 'date': '2021-05-09 22:00:00', 'stroke': 0.04, 'speed': 3.07, 'displacement': '0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.001,0.001,0.001,0.002,0.002,0.003,0.003,0.004,0.005,0.005,0.006,0.006,0.007,0.008,0.008,0.009,0.010 ... (565 characters truncated) ... 0.011,0.011,0.010,0.009,0.008,0.008,0.007,0.007,0.006,0.006,0.005,0.004,0.003,0.003,0.002,0.002,0.001,0.001,0.001,0.000,0.000,0.000,0.000,0.000,0.000', 'load': '64.20,64.29,64.33,64.59,64.86,65.34,65.38,65.34,65.56,65.38,65.34,66.65,67.09,67.57,67.75,68.40,69.63,70.33,70.77,71.12,71.73,72.30,72.26,71.86,71.86 ... (565 characters truncated) ... 64.20,64.02,63.94,63.67,62.89,62.93,63.06,63.37,63.50,63.67,64.24,64.55,64.42,64.11,63.89,63.81,63.72,63.81,64.51,64.77,64.94,64.94,64.90,64.59,64.42', 'maxload': 72.3})]
(Background on this error at: http://sqlalche.me/e/14/e3q8)

2021-05-16 00:09:51,584 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (8152, b'String or binary data would be truncated.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 478, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.OperationalError: (8152, b'String or binary data would be truncated.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 398, in extract_erchang_well_hour_monitor_data
    ExtractErchangWellAutoIndicatorData(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 467, in ExtractErchangWellAutoIndicatorData
    shicedata.to_sql(tablename, GlOBAL_mssql_engine_UTF8, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1419, in to_sql
    raise err
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 478, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.OperationalError: (pymssql._pymssql.OperationalError) (8152, b'String or binary data would be truncated.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n')
[SQL: INSERT INTO [EcWellIndicatorAutoHour] (wellname, date, stroke, speed, displacement, [load], maxload) VALUES (%(wellname)s, %(date)s, %(stroke)s, %(speed)s, %(displacement)s, %(load)s, %(maxload)s)]
[parameters: ({'wellname': 'AD2', 'date': '2021-05-09 22:00:00', 'stroke': 5.09, 'speed': 3.01, 'displacement': '0.000,0.000,0.006,0.014,0.025,0.037,0.055,0.076,0.101,0.128,0.159,0.192,0.229,0.269,0.312,0.357,0.406,0.456,0.510,0.566,0.624,0.684,0.747,0.811,0.877 ... (901 characters truncated) ... 0.875,0.814,0.754,0.696,0.640,0.585,0.532,0.481,0.432,0.385,0.340,0.298,0.258,0.221,0.186,0.154,0.125,0.099,0.075,0.055,0.038,0.024,0.014,0.006,0.001', 'load': '63.29,66.04,66.17,66.79,67.19,67.28,67.90,68.65,69.27,71.12,72.45,73.65,75.19,76.70,77.98,79.44,82.01,83.91,85.99,88.20,90.90,92.62,95.23,97.58,98.42 ... (901 characters truncated) ... 55.86,56.75,57.01,57.99,58.16,58.03,58.12,57.90,58.16,58.03,58.21,58.25,58.34,58.61,59.00,59.05,59.23,59.14,59.23,59.09,59.09,58.61,58.69,58.83,59.00', 'maxload': 98.42}, {'wellname': 'S74', 'date': '2021-05-09 22:00:00', 'stroke': 4.0, 'speed': 2.6, 'displacement': '0.007,0.013,0.021,0.031,0.043,0.057,0.073,0.090,0.110,0.132,0.155,0.180,0.207,0.236,0.267,0.299,0.333,0.369,0.406,0.445,0.486,0.528,0.571,0.616,0.662 ... (901 characters truncated) ... 0.483,0.445,0.407,0.371,0.336,0.303,0.271,0.241,0.212,0.185,0.160,0.136,0.115,0.094,0.076,0.060,0.045,0.032,0.022,0.014,0.008,0.004,0.001,0.001,0.003', 'load': '44.11,44.17,44.21,44.16,44.07,43.99,44.08,44.22,44.42,44.69,44.94,45.04,45.07,45.02,44.92,45.80,46.57,47.63,48.67,49.81,50.09,50.64,50.83,51.10,51.22 ... (901 characters truncated) ... 42.68,42.74,42.92,43.20,43.46,43.63,43.68,43.65,43.53,43.40,43.32,43.33,43.43,43.57,43.75,43.91,43.98,43.95,43.85,43.75,43.66,43.64,43.69,43.83,43.98', 'maxload': 51.22}, {'wellname': 'S75-2CH', 'date': '2021-05-09 22:00:00', 'stroke': 4.01, 'speed': 2.6, 'displacement': '0.014,0.027,0.047,0.071,0.099,0.130,0.165,0.201,0.238,0.279,0.322,0.366,0.412,0.460,0.507,0.558,0.609,0.661,0.714,0.768,0.822,0.878,0.934,0.989,1.045 ... (901 characters truncated) ... 1.548,1.474,1.401,1.325,1.250,1.173,1.094,1.014,0.934,0.850,0.766,0.681,0.594,0.506,0.417,0.330,0.250,0.179,0.120,0.074,0.042,0.021,0.008,0.003,0.006', 'load': '36.96,36.96,36.96,36.96,36.99,37.00,37.01,37.00,37.00,36.99,36.99,36.98,36.98,36.99,36.98,36.97,36.98,36.99,36.99,36.99,37.00,36.99,36.98,36.98,36.98 ... (901 characters truncated) ... 36.98,36.98,36.97,36.98,37.00,36.99,36.99,36.99,36.98,36.97,36.97,36.97,36.97,36.97,36.97,36.99,36.99,36.99,37.00,36.99,36.97,36.97,36.98,36.97,36.96', 'maxload': 37.02}, {'wellname': 'S80', 'date': '2021-05-09 22:00:00', 'stroke': 4.0, 'speed': 2.22, 'displacement': '0.001,0.003,0.005,0.009,0.015,0.021,0.030,0.039,0.050,0.062,0.076,0.091,0.107,0.126,0.146,0.167,0.191,0.216,0.242,0.271,0.301,0.333,0.366,0.401,0.438 ... (901 characters truncated) ... 0.169,0.154,0.139,0.127,0.115,0.105,0.095,0.086,0.077,0.068,0.060,0.052,0.045,0.038,0.031,0.025,0.020,0.015,0.011,0.007,0.004,0.002,0.001,0.000,0.000', 'load': '51.68,51.71,51.75,51.78,51.82,51.92,52.03,52.15,52.26,52.40,52.51,52.58,52.69,52.85,52.98,53.14,53.33,53.50,53.59,53.73,53.85,54.05,54.31,54.67,55.11 ... (901 characters truncated) ... 63.33,64.07,64.55,64.78,64.78,64.65,64.55,64.63,64.84,65.16,62.46,59.78,56.99,54.11,51.15,51.17,51.19,51.20,51.23,51.29,51.36,51.42,51.50,51.59,51.64', 'maxload': 65.87}, {'wellname': 'T6-433CX2', 'date': '2021-05-09 22:00:00', 'stroke': 4.0, 'speed': 2.4, 'displacement': '0.006,0.012,0.020,0.031,0.043,0.058,0.075,0.094,0.115,0.138,0.164,0.191,0.220,0.251,0.284,0.318,0.355,0.393,0.433,0.475,0.518,0.564,0.610,0.659,0.709 ... (901 characters truncated) ... 0.595,0.547,0.501,0.456,0.413,0.372,0.333,0.296,0.260,0.227,0.196,0.168,0.141,0.117,0.095,0.075,0.057,0.042,0.029,0.019,0.011,0.005,0.002,0.001,0.002', 'load': '64.69,64.74,64.94,65.34,65.82,66.27,66.86,67.54,68.21,68.95,69.84,70.66,71.53,72.46,73.48,74.56,75.73,76.96,78.23,79.57,81.01,82.49,83.94,85.42,86.90 ... (901 characters truncated) ... 62.86,62.45,62.10,62.03,62.21,62.57,62.97,63.44,63.76,63.84,63.80,63.62,63.43,63.26,63.28,63.44,63.77,64.18,64.63,64.99,65.19,65.25,65.12,64.94,64.78', 'maxload': 91.64}, {'wellname': 'T752CH', 'date': '2021-05-09 22:00:00', 'stroke': 4.0, 'speed': 2.6, 'displacement': '0.014,0.026,0.042,0.063,0.087,0.114,0.143,0.176,0.211,0.248,0.287,0.328,0.369,0.412,0.455,0.500,0.547,0.596,0.643,0.692,0.742,0.791,0.840,0.891,0.943 ... (901 characters truncated) ... 1.616,1.536,1.456,1.374,1.292,1.207,1.123,1.037,0.949,0.858,0.768,0.674,0.580,0.483,0.389,0.301,0.223,0.155,0.104,0.065,0.036,0.018,0.008,0.004,0.006', 'load': '80.19,80.19,80.18,80.17,80.17,80.18,80.17,80.18,80.18,80.18,80.16,80.18,80.17,80.18,80.18,80.20,80.18,80.19,80.18,80.18,80.17,80.17,80.16,80.16,80.16 ... (901 characters truncated) ... 80.13,80.13,80.13,80.13,80.15,80.17,80.18,80.19,80.18,80.17,80.16,80.16,80.15,80.16,80.17,80.17,80.17,80.18,80.17,80.16,80.17,80.17,80.17,80.19,80.20', 'maxload': 80.21}, {'wellname': 'TH10103CH2', 'date': '2021-05-09 22:00:00', 'stroke': 4.01, 'speed': 2.72, 'displacement': '0.005,0.009,0.016,0.023,0.033,0.044,0.057,0.072,0.089,0.107,0.126,0.147,0.170,0.195,0.221,0.248,0.278,0.308,0.341,0.374,0.409,0.445,0.483,0.522,0.563 ... (901 characters truncated) ... 0.378,0.348,0.319,0.292,0.265,0.239,0.215,0.191,0.169,0.148,0.128,0.109,0.092,0.076,0.062,0.049,0.037,0.027,0.019,0.012,0.007,0.003,0.001,0.001,0.002', 'load': '63.23,63.21,63.20,63.23,63.29,63.38,63.50,63.63,63.72,63.78,63.79,63.74,63.74,63.81,63.97,64.22,64.54,64.90,65.27,65.68,66.18,66.80,67.47,68.22,69.04 ... (901 characters truncated) ... 61.12,61.11,61.14,61.22,61.34,61.47,61.59,61.66,61.71,61.69,61.68,61.64,61.65,61.65,61.69,61.79,62.01,62.26,62.58,62.90,63.14,63.28,63.35,63.31,63.26', 'maxload': 77.54}, {'wellname': 'TH10104', 'date': '2021-05-09 22:00:00', 'stroke': 4.72, 'speed': 2.7, 'displacement': '0.000,0.000,0.001,0.010,0.018,0.037,0.049,0.080,0.099,0.139,0.165,0.216,0.242,0.303,0.338,0.408,0.448,0.483,0.527,0.565,0.612,0.702,0.753,0.851,0.897 ... (565 characters truncated) ... 1.168,1.113,0.996,0.933,0.824,0.766,0.718,0.664,0.620,0.568,0.479,0.433,0.354,0.321,0.254,0.221,0.165,0.137,0.095,0.078,0.046,0.032,0.014,0.007,0.003', 'load': '0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,47.79,48.58,49.07,50.17,51.14,52.64,53.17,52.78,5 ... (545 characters truncated) ... 44.57,44.39,44.79,44.83,45.32,45.41,45.23,45.23,45.27,44.88,45.05,45.23,45.36,45.71,45.49,45.58,45.45,45.23,45.63,45.58,46.02,45.93,45.93,46.07,45.85', 'maxload': 53.17}  ... displaying 10 of 113 total bound parameter sets ...  {'wellname': 'TK778X', 'date': '2021-05-09 22:00:00', 'stroke': 4.0, 'speed': 2.6, 'displacement': '0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.072,0.145,0.217,0.290,0.363,0.363,0.363,0.363,0.435,0.508,0.581 ... (901 characters truncated) ... 0.654,0.581,0.508,0.435,0.363,0.363,0.290,0.217,0.145,0.072,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000', 'load': '0.78,0.77,0.76,0.75,0.75,0.76,0.77,0.79,0.80,0.81,0.81,0.82,0.80,0.80,0.80,0.78,0.76,0.76,0.76,0.75,0.74,0.76,0.77,0.77,0.78,0.80,0.79,0.78,0.77,0.76 ... (701 characters truncated) ... 0.78,0.78,0.79,0.78,0.77,0.79,0.79,0.79,0.78,0.80,0.80,0.79,0.78,0.79,0.80,0.79,0.80,0.80,0.80,0.79,0.79,0.79,0.80,0.81,0.81,0.80,0.80,0.79,0.79,0.78', 'maxload': 0.82}, {'wellname': 'TK783X', 'date': '2021-05-09 22:00:00', 'stroke': 0.04, 'speed': 3.07, 'displacement': '0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.001,0.001,0.001,0.002,0.002,0.003,0.003,0.004,0.005,0.005,0.006,0.006,0.007,0.008,0.008,0.009,0.010 ... (565 characters truncated) ... 0.011,0.011,0.010,0.009,0.008,0.008,0.007,0.007,0.006,0.006,0.005,0.004,0.003,0.003,0.002,0.002,0.001,0.001,0.001,0.000,0.000,0.000,0.000,0.000,0.000', 'load': '64.20,64.29,64.33,64.59,64.86,65.34,65.38,65.34,65.56,65.38,65.34,66.65,67.09,67.57,67.75,68.40,69.63,70.33,70.77,71.12,71.73,72.30,72.26,71.86,71.86 ... (565 characters truncated) ... 64.20,64.02,63.94,63.67,62.89,62.93,63.06,63.37,63.50,63.67,64.24,64.55,64.42,64.11,63.89,63.81,63.72,63.81,64.51,64.77,64.94,64.94,64.90,64.59,64.42', 'maxload': 72.3})]
(Background on this error at: http://sqlalche.me/e/14/e3q8)

2021-05-16 00:40:49,097 - logger - INFO - Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
cx_Oracle.DatabaseError: ORA-00904: "XXZXFH": 标识符无效

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 283, in extract_erchang_well_assay_data
    ExtractErchangWellManualIndicatorData(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 355, in ExtractErchangWellManualIndicatorData
    shoucedata = pd.read_sql(get_data_sql, GlOBAL_oracle_engine_bupro)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 527, in read_sql
    chunksize=chunksize,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1308, in read_query
    result = self.execute(*args)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1176, in execute
    return self.connectable.execution_options().execute(*args, **kwargs)
  File "<string>", line 2, in execute
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\deprecations.py", line 390, in warned
    return fn(*args, **kwargs)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3038, in execute
    return connection.execute(statement, *multiparams, **params)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1191, in execute
    future=False,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1492, in _exec_driver_sql
    distilled_parameters,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.DatabaseError: (cx_Oracle.DatabaseError) ORA-00904: "XXZXFH": 标识符无效
[SQL: SELECT JH, CSRQ, CC, CC1, SXZDFH, XXZXFH, DBMS_LOB.SUBSTR(SGT,2000,1) FROM XBYY.DCA01 WHERE CSRQ = TO_DATE('2021-05-15 00:00:00', 'yyyy-mm-dd,hh24:mi:ss')]
(Background on this error at: http://sqlalche.me/e/14/4xp6)

2021-05-16 00:42:28,325 - logger - INFO - Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
cx_Oracle.DatabaseError: ORA-00904: "CC1": 标识符无效

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 283, in extract_erchang_well_assay_data
    ExtractErchangWellManualIndicatorData(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 355, in ExtractErchangWellManualIndicatorData
    shoucedata = pd.read_sql(get_data_sql, GlOBAL_oracle_engine_bupro)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 527, in read_sql
    chunksize=chunksize,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1308, in read_query
    result = self.execute(*args)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1176, in execute
    return self.connectable.execution_options().execute(*args, **kwargs)
  File "<string>", line 2, in execute
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\deprecations.py", line 390, in warned
    return fn(*args, **kwargs)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3038, in execute
    return connection.execute(statement, *multiparams, **params)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1191, in execute
    future=False,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1492, in _exec_driver_sql
    distilled_parameters,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.DatabaseError: (cx_Oracle.DatabaseError) ORA-00904: "CC1": 标识符无效
[SQL: SELECT JH, CSRQ, CC, CC1, SXZDFH, DBMS_LOB.SUBSTR(SGT,2000,1) FROM XBYY.DCA01 WHERE CSRQ = TO_DATE('2021-05-15 00:00:00', 'yyyy-mm-dd,hh24:mi:ss')]
(Background on this error at: http://sqlalche.me/e/14/4xp6)

2021-05-16 01:03:10,593 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 398, in extract_erchang_well_hour_monitor_data
    ExtractErchangWellAutoIndicatorData(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 456, in ExtractErchangWellAutoIndicatorData
    shicedata["maxload"] = maxload
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\frame.py", line 3163, in __setitem__
    self._set_item(key, value)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\frame.py", line 3242, in _set_item
    value = self._sanitize_column(key, value)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\frame.py", line 3899, in _sanitize_column
    value = sanitize_index(value, self.index)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\internals\construction.py", line 752, in sanitize_index
    "Length of values "
ValueError: Length of values (108) does not match length of index (116)

2021-05-18 23:48:07,422 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (195, b"'TO_DATE' is not a recognized built-in function name.DB-Lib error message 20018, severity 15:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 478, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.OperationalError: (195, b"'TO_DATE' is not a recognized built-in function name.DB-Lib error message 20018, severity 15:\nGeneral SQL Server error: Check messages from the SQL Server\n")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 481, in extract_erchang_well_daily_monitor_data
    ExtractEcWellAutoIndicatorDataDay(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 508, in ExtractEcWellAutoIndicatorDataDay
    shicedata = pd.read_sql(get_data_sql, GlOBAL_mssql_engine_UTF8)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 527, in read_sql
    chunksize=chunksize,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1308, in read_query
    result = self.execute(*args)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1176, in execute
    return self.connectable.execution_options().execute(*args, **kwargs)
  File "<string>", line 2, in execute
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\deprecations.py", line 390, in warned
    return fn(*args, **kwargs)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3038, in execute
    return connection.execute(statement, *multiparams, **params)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1191, in execute
    future=False,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1492, in _exec_driver_sql
    distilled_parameters,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 478, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.OperationalError: (pymssql._pymssql.OperationalError) (195, b"'TO_DATE' is not a recognized built-in function name.DB-Lib error message 20018, severity 15:\nGeneral SQL Server error: Check messages from the SQL Server\n")
[SQL: SELECT wellname, date, stroke, speed, minload, maxload FROM EcWellIndicatorAutoHour WHERE date >= TO_DATE('2021-05-17 23:00:00', 'yyyy-mm-dd,hh24:mi:ss') and date <= TO_DATE('2021-05-18 23:00:00', 'yyyy-mm-dd,hh24:mi:ss')]
(Background on this error at: http://sqlalche.me/e/14/e3q8)

2021-05-18 23:48:34,294 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (102, b"Incorrect syntax near ')'.DB-Lib error message 20018, severity 15:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (102, b"Incorrect syntax near ')'.DB-Lib error message 20018, severity 15:\nGeneral SQL Server error: Check messages from the SQL Server\n")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 481, in extract_erchang_well_daily_monitor_data
    ExtractEcWellAutoIndicatorDataDay(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 506, in ExtractEcWellAutoIndicatorDataDay
    shicedata = pd.read_sql(get_data_sql, GlOBAL_mssql_engine_UTF8)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 527, in read_sql
    chunksize=chunksize,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1308, in read_query
    result = self.execute(*args)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1176, in execute
    return self.connectable.execution_options().execute(*args, **kwargs)
  File "<string>", line 2, in execute
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\deprecations.py", line 390, in warned
    return fn(*args, **kwargs)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3038, in execute
    return connection.execute(statement, *multiparams, **params)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1191, in execute
    future=False,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1492, in _exec_driver_sql
    distilled_parameters,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (102, b"Incorrect syntax near ')'.DB-Lib error message 20018, severity 15:\nGeneral SQL Server error: Check messages from the SQL Server\n")
[SQL: SELECT wellname, date, stroke, speed, minload, maxload FROM EcWellIndicatorAutoHour WHERE date >= '2021-05-17 23:00:00' and date <= '2021-05-18 23:00:00')]
(Background on this error at: http://sqlalche.me/e/14/f405)

2021-05-18 23:50:19,455 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 481, in extract_erchang_well_daily_monitor_data
    ExtractEcWellAutoIndicatorDataDay(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 508, in ExtractEcWellAutoIndicatorDataDay
    shicedata = shicedata.groupby["wellname"].mean()
TypeError: 'method' object is not subscriptable

2021-05-18 23:50:37,198 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 481, in extract_erchang_well_daily_monitor_data
    ExtractEcWellAutoIndicatorDataDay(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 508, in ExtractEcWellAutoIndicatorDataDay
    shicedata = shicedata.groupby["wellname"]
TypeError: 'method' object is not subscriptable

2021-05-19 01:13:11,624 - logger - INFO - Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 3080, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas\_libs\index.pyx", line 70, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 96, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 126, in pandas._libs.index.IndexEngine._get_loc_duplicates
  File "pandas\_libs\index.pyx", line 133, in pandas._libs.index.IndexEngine._maybe_get_bool_indexer
  File "pandas\_libs\index.pyx", line 150, in pandas._libs.index.IndexEngine._unpack_bool_indexer
KeyError: 'wellname'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractEcWellChanxiDataHour(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 499, in ExtractEcWellChanxiDataHour
    print(realtimedata.loc["wellname"])
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexing.py", line 895, in __getitem__
    return self._getitem_axis(maybe_callable, axis=axis)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexing.py", line 1124, in _getitem_axis
    return self._get_label(key, axis=axis)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexing.py", line 1073, in _get_label
    return self.obj.xs(label, axis=axis)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 3739, in xs
    loc = index.get_loc(key)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 3082, in get_loc
    raise KeyError(key) from err
KeyError: 'wellname'

2021-05-19 02:18:46,443 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractEcWellChanxiDataHour(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 499, in ExtractEcWellChanxiDataHour
    sumrealtimedata.set_option('display.float_format', lambda x: '%.2f' % x)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 5465, in __getattr__
    return object.__getattribute__(self, name)
AttributeError: 'Series' object has no attribute 'set_option'

2021-05-19 02:19:02,689 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractEcWellChanxiDataHour(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 499, in ExtractEcWellChanxiDataHour
    sumrealtimedata.set_option('display.float_format', lambda x: '%.2f' % x)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 5465, in __getattr__
    return object.__getattribute__(self, name)
AttributeError: 'DataFrame' object has no attribute 'set_option'

2021-05-19 02:30:49,390 - logger - INFO - Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 3080, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas\_libs\index.pyx", line 70, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 101, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 4554, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 4562, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'S88CH'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractEcWellChanxiDataHour(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 495, in ExtractEcWellChanxiDataHour
    print(realtimedata["S88CH"])
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\frame.py", line 3024, in __getitem__
    indexer = self.columns.get_loc(key)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 3082, in get_loc
    raise KeyError(key) from err
KeyError: 'S88CH'

2021-05-19 02:31:05,881 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractEcWellChanxiDataHour(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 495, in ExtractEcWellChanxiDataHour
    print(realtimedata.loc["S88CH"])
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexing.py", line 895, in __getitem__
    return self._getitem_axis(maybe_callable, axis=axis)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexing.py", line 1124, in _getitem_axis
    return self._get_label(key, axis=axis)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexing.py", line 1073, in _get_label
    return self.obj.xs(label, axis=axis)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 3739, in xs
    loc = index.get_loc(key)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\range.py", line 354, in get_loc
    raise KeyError(key)
KeyError: 'S88CH'

2021-05-19 02:31:40,218 - logger - INFO - Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 460, in _get_axis_number
    return cls._AXIS_TO_AXIS_NUMBER[axis]
KeyError: 'S88CH'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractEcWellChanxiDataHour(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 495, in ExtractEcWellChanxiDataHour
    print(realtimedata.loc("S88CH"))
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexing.py", line 607, in __call__
    axis = self.obj._get_axis_number(axis)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 462, in _get_axis_number
    raise ValueError(f"No axis named {axis} for object type {cls.__name__}")
ValueError: No axis named S88CH for object type DataFrame

2021-05-19 02:32:25,426 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractEcWellChanxiDataHour(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 495, in ExtractEcWellChanxiDataHour
    print(realtimedata.loc["S88CH"])
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexing.py", line 895, in __getitem__
    return self._getitem_axis(maybe_callable, axis=axis)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexing.py", line 1124, in _getitem_axis
    return self._get_label(key, axis=axis)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexing.py", line 1073, in _get_label
    return self.obj.xs(label, axis=axis)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 3739, in xs
    loc = index.get_loc(key)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\range.py", line 354, in get_loc
    raise KeyError(key)
KeyError: 'S88CH'

2021-05-19 02:32:58,718 - logger - INFO - Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 460, in _get_axis_number
    return cls._AXIS_TO_AXIS_NUMBER[axis]
KeyError: 'S88CH'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractEcWellChanxiDataHour(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 512, in ExtractEcWellChanxiDataHour
    print(realtimedata.loc("S88CH"))
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexing.py", line 607, in __call__
    axis = self.obj._get_axis_number(axis)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 462, in _get_axis_number
    raise ValueError(f"No axis named {axis} for object type {cls.__name__}")
ValueError: No axis named S88CH for object type DataFrame

2021-05-19 02:42:07,526 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (207, b"Invalid column name 'date'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 133, in executesql
    cursor.execute(sql)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (207, b"Invalid column name 'date'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

2021-05-19 02:42:07,613 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (207, b"Invalid column name 'sumchanxi'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (207, b"Invalid column name 'sumchanxi'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractEcWellChanxiDataHour(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 514, in ExtractEcWellChanxiDataHour
    realtimedata.to_sql(tablename, GlOBAL_mssql_engine_UTF8, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1419, in to_sql
    raise err
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b"Invalid column name 'sumchanxi'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")
[SQL: INSERT INTO [EcWellChanxiRealtime] (wellname, hourchanxi, time, basedata, sumchanxi) VALUES (%(wellname)s, %(hourchanxi)s, %(time)s, %(basedata)s, %(sumchanxi)s)]
[parameters: ({'wellname': '12-3-JRL', 'hourchanxi': 6553.5, 'time': '2021-05-19 02:00:00', 'basedata': None, 'sumchanxi': None}, {'wellname': 'AD10CH2', 'hourchanxi': 0.0, 'time': '2021-05-19 02:00:00', 'basedata': 0.0, 'sumchanxi': 0.0}, {'wellname': 'AD11CH2', 'hourchanxi': 0.0, 'time': '2021-05-19 02:00:00', 'basedata': None, 'sumchanxi': 0.0}, {'wellname': 'AD13CH', 'hourchanxi': 0.0, 'time': '2021-05-19 02:00:00', 'basedata': None, 'sumchanxi': 0.0}, {'wellname': 'AD14', 'hourchanxi': 0.0, 'time': '2021-05-19 02:00:00', 'basedata': 0.0, 'sumchanxi': 3430.021}, {'wellname': 'AD15', 'hourchanxi': 0.0365, 'time': '2021-05-19 02:00:00', 'basedata': 0.0, 'sumchanxi': 45.84}, {'wellname': 'AD16', 'hourchanxi': 0.0, 'time': '2021-05-19 02:00:00', 'basedata': 0.0, 'sumchanxi': 0.0}, {'wellname': 'AD17', 'hourchanxi': 0.078, 'time': '2021-05-19 02:00:00', 'basedata': 0.0, 'sumchanxi': 794.7818}  ... displaying 10 of 882 total bound parameter sets ...  {'wellname': 'TS3-3CH', 'hourchanxi': 0.7348333333333332, 'time': '2021-05-19 02:00:00', 'basedata': 0.7, 'sumchanxi': 780.4581}, {'wellname': 'TS3CX', 'hourchanxi': 1.661833333333333, 'time': '2021-05-19 02:00:00', 'basedata': 1.6, 'sumchanxi': 2324.8379})]
(Background on this error at: http://sqlalche.me/e/14/f405)

2021-05-19 03:07:53,212 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (207, b"Invalid column name 'date'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 133, in executesql
    cursor.execute(sql)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (207, b"Invalid column name 'date'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

2021-05-19 03:08:48,284 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (207, b"Invalid column name 'date'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 133, in executesql
    cursor.execute(sql)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (207, b"Invalid column name 'date'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

2021-05-19 03:22:56,176 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (207, b"Invalid column name 'date'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\nDB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\nDB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (207, b"Invalid column name 'date'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\nDB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\nDB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 525, in extract_erchang_well_daily_monitor_data
    ExtractEcWellChanxiDataDay(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 583, in ExtractEcWellChanxiDataDay
    dailydata = pd.read_sql(get_data_sql, GlOBAL_mssql_engine_UTF8)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 527, in read_sql
    chunksize=chunksize,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1308, in read_query
    result = self.execute(*args)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1176, in execute
    return self.connectable.execution_options().execute(*args, **kwargs)
  File "<string>", line 2, in execute
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\deprecations.py", line 390, in warned
    return fn(*args, **kwargs)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3038, in execute
    return connection.execute(statement, *multiparams, **params)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1191, in execute
    future=False,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1492, in _exec_driver_sql
    distilled_parameters,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b"Invalid column name 'date'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\nDB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\nDB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")
[SQL: SELECT wellname, time, basedata, hourchanxi, sumcahnxi FROM EcWellChanxiRealtimeAutoHour WHERE date >= '2021-05-18 03:00:00' and date <= '2021-05-19 03:00:00']
(Background on this error at: http://sqlalche.me/e/14/f405)

2021-05-19 03:24:08,217 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (207, b"Invalid column name 'sumcahnxi'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (207, b"Invalid column name 'sumcahnxi'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 525, in extract_erchang_well_daily_monitor_data
    ExtractEcWellChanxiDataDay(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 583, in ExtractEcWellChanxiDataDay
    dailydata = pd.read_sql(get_data_sql, GlOBAL_mssql_engine_UTF8)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 527, in read_sql
    chunksize=chunksize,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1308, in read_query
    result = self.execute(*args)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1176, in execute
    return self.connectable.execution_options().execute(*args, **kwargs)
  File "<string>", line 2, in execute
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\deprecations.py", line 390, in warned
    return fn(*args, **kwargs)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3038, in execute
    return connection.execute(statement, *multiparams, **params)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1191, in execute
    future=False,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1492, in _exec_driver_sql
    distilled_parameters,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b"Invalid column name 'sumcahnxi'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")
[SQL: SELECT wellname, time, basedata, hourchanxi, sumcahnxi FROM EcWellChanxiRealtimeAutoHour WHERE time >= '2021-05-18 03:00:00' and time <= '2021-05-19 03:00:00']
(Background on this error at: http://sqlalche.me/e/14/f405)

2021-05-19 03:24:11,321 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (207, b"Invalid column name 'sumcahnxi'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (207, b"Invalid column name 'sumcahnxi'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 525, in extract_erchang_well_daily_monitor_data
    ExtractEcWellChanxiDataDay(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 583, in ExtractEcWellChanxiDataDay
    dailydata = pd.read_sql(get_data_sql, GlOBAL_mssql_engine_UTF8)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 527, in read_sql
    chunksize=chunksize,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1308, in read_query
    result = self.execute(*args)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1176, in execute
    return self.connectable.execution_options().execute(*args, **kwargs)
  File "<string>", line 2, in execute
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\deprecations.py", line 390, in warned
    return fn(*args, **kwargs)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3038, in execute
    return connection.execute(statement, *multiparams, **params)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1191, in execute
    future=False,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1492, in _exec_driver_sql
    distilled_parameters,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1707, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 717, in do_execute
    cursor.execute(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b"Invalid column name 'sumcahnxi'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")
[SQL: SELECT wellname, time, basedata, hourchanxi, sumcahnxi FROM EcWellChanxiRealtimeAutoHour WHERE time >= '2021-05-18 03:00:00' and time <= '2021-05-19 03:00:00']
(Background on this error at: http://sqlalche.me/e/14/f405)

2021-05-19 03:24:57,332 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 525, in extract_erchang_well_daily_monitor_data
    ExtractEcWellChanxiDataDay(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 585, in ExtractEcWellChanxiDataDay
    dailydata = dailydata.groupby("wellname").mean()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\groupby\groupby.py", line 1499, in mean
    numeric_only=numeric_only,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\groupby\generic.py", line 1016, in _cython_agg_general
    how, alt=alt, numeric_only=numeric_only, min_count=min_count
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\groupby\generic.py", line 1121, in _cython_agg_blocks
    raise DataError("No numeric types to aggregate")
pandas.core.base.DataError: No numeric types to aggregate

2021-05-19 18:12:15,116 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 458, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (207, b"Invalid column name 'date'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 133, in executesql
    cursor.execute(sql)
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (207, b"Invalid column name 'date'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

2021-05-19 18:12:15,159 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (207, b"Invalid column name 'date'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (207, b"Invalid column name 'date'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 525, in extract_erchang_well_daily_monitor_data
    ExtractEcWellChanxiDataDay(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 610, in ExtractEcWellChanxiDataDay
    dailydata.to_sql(tablename, GlOBAL_mssql_engine_UTF8, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1419, in to_sql
    raise err
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b"Invalid column name 'date'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")
[SQL: INSERT INTO [EcWellChanxiRealtimeAutoDaily] (wellname, dailychanxi, date, basedata, sumchanxi) VALUES (%(wellname)s, %(dailychanxi)s, %(date)s, %(basedata)s, %(sumchanxi)s)]
[parameters: ({'wellname': '12-3-JRL', 'dailychanxi': 65535.0, 'date': '2021-05-19 00:00:00', 'basedata': None, 'sumchanxi': None}, {'wellname': 'AD10CH2', 'dailychanxi': 0.0, 'date': '2021-05-19 00:00:00', 'basedata': 0.0, 'sumchanxi': 0.0}, {'wellname': 'AD11CH2', 'dailychanxi': 0.0, 'date': '2021-05-19 00:00:00', 'basedata': None, 'sumchanxi': 0.0}, {'wellname': 'AD13CH', 'dailychanxi': 0.0, 'date': '2021-05-19 00:00:00', 'basedata': None, 'sumchanxi': 0.0}, {'wellname': 'AD14', 'dailychanxi': 0.0, 'date': '2021-05-19 00:00:00', 'basedata': 0.0, 'sumchanxi': 3430.021}, {'wellname': 'AD15', 'dailychanxi': 0.1, 'date': '2021-05-19 00:00:00', 'basedata': 0.0, 'sumchanxi': 45.84}, {'wellname': 'AD16', 'dailychanxi': 0.0, 'date': '2021-05-19 00:00:00', 'basedata': 0.0, 'sumchanxi': 0.0}, {'wellname': 'AD17', 'dailychanxi': 0.1, 'date': '2021-05-19 00:00:00', 'basedata': 0.0, 'sumchanxi': 794.7818}  ... displaying 10 of 882 total bound parameter sets ...  {'wellname': 'TS3-3CH', 'dailychanxi': 11.6, 'date': '2021-05-19 00:00:00', 'basedata': 1.2, 'sumchanxi': 772.3796}, {'wellname': 'TS3CX', 'dailychanxi': 18.1, 'date': '2021-05-19 00:00:00', 'basedata': 1.7, 'sumchanxi': 2311.6289})]
(Background on this error at: http://sqlalche.me/e/14/f405)

2021-05-19 18:12:27,971 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (207, b"Invalid column name 'date'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (207, b"Invalid column name 'date'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 525, in extract_erchang_well_daily_monitor_data
    ExtractEcWellChanxiDataDay(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 610, in ExtractEcWellChanxiDataDay
    dailydata.to_sql(tablename, GlOBAL_mssql_engine_UTF8, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1419, in to_sql
    raise err
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b"Invalid column name 'date'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")
[SQL: INSERT INTO [EcWellChanxiRealtimeAutoDaily] (wellname, dailychanxi, date, basedata, sumchanxi) VALUES (%(wellname)s, %(dailychanxi)s, %(date)s, %(basedata)s, %(sumchanxi)s)]
[parameters: ({'wellname': '12-3-JRL', 'dailychanxi': 65535.0, 'date': '2021-05-19 00:00:00', 'basedata': None, 'sumchanxi': None}, {'wellname': 'AD10CH2', 'dailychanxi': 0.0, 'date': '2021-05-19 00:00:00', 'basedata': 0.0, 'sumchanxi': 0.0}, {'wellname': 'AD11CH2', 'dailychanxi': 0.0, 'date': '2021-05-19 00:00:00', 'basedata': None, 'sumchanxi': 0.0}, {'wellname': 'AD13CH', 'dailychanxi': 0.0, 'date': '2021-05-19 00:00:00', 'basedata': None, 'sumchanxi': 0.0}, {'wellname': 'AD14', 'dailychanxi': 0.0, 'date': '2021-05-19 00:00:00', 'basedata': 0.0, 'sumchanxi': 3430.021}, {'wellname': 'AD15', 'dailychanxi': 0.1, 'date': '2021-05-19 00:00:00', 'basedata': 0.0, 'sumchanxi': 45.84}, {'wellname': 'AD16', 'dailychanxi': 0.0, 'date': '2021-05-19 00:00:00', 'basedata': 0.0, 'sumchanxi': 0.0}, {'wellname': 'AD17', 'dailychanxi': 0.1, 'date': '2021-05-19 00:00:00', 'basedata': 0.0, 'sumchanxi': 794.7818}  ... displaying 10 of 882 total bound parameter sets ...  {'wellname': 'TS3-3CH', 'dailychanxi': 11.6, 'date': '2021-05-19 00:00:00', 'basedata': 1.2, 'sumchanxi': 772.3796}, {'wellname': 'TS3CX', 'dailychanxi': 18.1, 'date': '2021-05-19 00:00:00', 'basedata': 1.7, 'sumchanxi': 2311.6289})]
(Background on this error at: http://sqlalche.me/e/14/f405)

2021-05-19 18:23:00,818 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractEcWellChanxiDataHour(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 519, in ExtractEcWellChanxiDataHour
    staticdata.columns = FieldName
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 5478, in __setattr__
    return object.__setattr__(self, name, value)
  File "pandas\_libs\properties.pyx", line 66, in pandas._libs.properties.AxisProperty.__set__
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 670, in _set_axis
    self._mgr.set_axis(axis, labels)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\internals\managers.py", line 221, in set_axis
    f"Length mismatch: Expected axis has {old_len} elements, new "
ValueError: Length mismatch: Expected axis has 7 elements, new values have 6 elements

2021-05-19 18:41:18,622 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractEcWellChanxiDataHour(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 533, in ExtractEcWellChanxiDataHour
    realtimedata.to_sql(tablename, GlOBAL_mssql_engine_GBK, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1934, in _handle_dbapi_exception
    util.raise_(exc_info[1], with_traceback=exc_info[2])
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1252, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1274, in pymssql._mssql.MSSQLConnection.format_sql_command
  File "src\pymssql\_mssql.pyx", line 2076, in pymssql._mssql._substitute_params
  File "src\pymssql\_mssql.pyx", line 243, in pymssql._mssql.ensure_bytes
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xb9 in position 2: invalid start byte

2021-05-21 02:38:02,679 - logger - INFO - Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 3080, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas\_libs\index.pyx", line 70, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 101, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 4554, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 4562, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'uptime'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 547, in extract_erchang_well_daily_monitor_data
    ExtractEcWellChanxiDataDay(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 625, in ExtractEcWellChanxiDataDay
    sumdailydata["date"] = dailydata["uptime"]
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\frame.py", line 3024, in __getitem__
    indexer = self.columns.get_loc(key)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 3082, in get_loc
    raise KeyError(key) from err
KeyError: 'uptime'

2021-05-21 02:39:27,333 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (515, b"Cannot insert the value NULL into column 'date', table 'cyec.dbo.EcWellChanxiRealtimeAutoDaily'; column does not allow nulls. INSERT fails.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 477, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.IntegrityError: (515, b"Cannot insert the value NULL into column 'date', table 'cyec.dbo.EcWellChanxiRealtimeAutoDaily'; column does not allow nulls. INSERT fails.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 547, in extract_erchang_well_daily_monitor_data
    ExtractEcWellChanxiDataDay(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 639, in ExtractEcWellChanxiDataDay
    dailydata.to_sql(tablename, GlOBAL_mssql_engine_UTF8, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1419, in to_sql
    raise err
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 477, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.IntegrityError: (pymssql._pymssql.IntegrityError) (515, b"Cannot insert the value NULL into column 'date', table 'cyec.dbo.EcWellChanxiRealtimeAutoDaily'; column does not allow nulls. INSERT fails.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")
[SQL: INSERT INTO [EcWellChanxiRealtimeAutoDaily] (wellname, dailychanxi) VALUES (%(wellname)s, %(dailychanxi)s)]
[parameters: ({'wellname': 'S66', 'dailychanxi': 1.5}, {'wellname': 'S71', 'dailychanxi': -221.7}, {'wellname': 'S75-2CH', 'dailychanxi': 6553.5}, {'wellname': 'S88CH', 'dailychanxi': 1.0}, {'wellname': 'TH10108', 'dailychanxi': 6553.5}, {'wellname': 'TH10109CH', 'dailychanxi': 0.0}, {'wellname': 'TH10110CH2', 'dailychanxi': 2.1}, {'wellname': 'TH10116CH', 'dailychanxi': 0.0}  ... displaying 10 of 116 total bound parameter sets ...  {'wellname': 'TK7-619CH', 'dailychanxi': 1.4}, {'wellname': 'TS3-3CH', 'dailychanxi': 1.3})]
(Background on this error at: http://sqlalche.me/e/14/gkpj)

2021-05-21 02:39:47,203 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (515, b"Cannot insert the value NULL into column 'date', table 'cyec.dbo.EcWellChanxiRealtimeAutoDaily'; column does not allow nulls. INSERT fails.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 477, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.IntegrityError: (515, b"Cannot insert the value NULL into column 'date', table 'cyec.dbo.EcWellChanxiRealtimeAutoDaily'; column does not allow nulls. INSERT fails.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 547, in extract_erchang_well_daily_monitor_data
    ExtractEcWellChanxiDataDay(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 639, in ExtractEcWellChanxiDataDay
    dailydata.to_sql(tablename, GlOBAL_mssql_engine_UTF8, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1419, in to_sql
    raise err
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 477, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.IntegrityError: (pymssql._pymssql.IntegrityError) (515, b"Cannot insert the value NULL into column 'date', table 'cyec.dbo.EcWellChanxiRealtimeAutoDaily'; column does not allow nulls. INSERT fails.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")
[SQL: INSERT INTO [EcWellChanxiRealtimeAutoDaily] (wellname, dailychanxi) VALUES (%(wellname)s, %(dailychanxi)s)]
[parameters: ({'wellname': 'S66', 'dailychanxi': 1.5}, {'wellname': 'S71', 'dailychanxi': -221.7}, {'wellname': 'S75-2CH', 'dailychanxi': 6553.5}, {'wellname': 'S88CH', 'dailychanxi': 1.0}, {'wellname': 'TH10108', 'dailychanxi': 6553.5}, {'wellname': 'TH10109CH', 'dailychanxi': 0.0}, {'wellname': 'TH10110CH2', 'dailychanxi': 2.1}, {'wellname': 'TH10116CH', 'dailychanxi': 0.0}  ... displaying 10 of 116 total bound parameter sets ...  {'wellname': 'TK7-619CH', 'dailychanxi': 1.4}, {'wellname': 'TS3-3CH', 'dailychanxi': 1.3})]
(Background on this error at: http://sqlalche.me/e/14/gkpj)

2021-05-21 02:39:52,545 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (515, b"Cannot insert the value NULL into column 'date', table 'cyec.dbo.EcWellChanxiRealtimeAutoDaily'; column does not allow nulls. INSERT fails.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 477, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.IntegrityError: (515, b"Cannot insert the value NULL into column 'date', table 'cyec.dbo.EcWellChanxiRealtimeAutoDaily'; column does not allow nulls. INSERT fails.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 547, in extract_erchang_well_daily_monitor_data
    ExtractEcWellChanxiDataDay(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 639, in ExtractEcWellChanxiDataDay
    dailydata.to_sql(tablename, GlOBAL_mssql_engine_UTF8, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1419, in to_sql
    raise err
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 477, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.IntegrityError: (pymssql._pymssql.IntegrityError) (515, b"Cannot insert the value NULL into column 'date', table 'cyec.dbo.EcWellChanxiRealtimeAutoDaily'; column does not allow nulls. INSERT fails.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")
[SQL: INSERT INTO [EcWellChanxiRealtimeAutoDaily] (wellname, dailychanxi) VALUES (%(wellname)s, %(dailychanxi)s)]
[parameters: ({'wellname': 'S66', 'dailychanxi': 1.5}, {'wellname': 'S71', 'dailychanxi': -221.7}, {'wellname': 'S75-2CH', 'dailychanxi': 6553.5}, {'wellname': 'S88CH', 'dailychanxi': 1.0}, {'wellname': 'TH10108', 'dailychanxi': 6553.5}, {'wellname': 'TH10109CH', 'dailychanxi': 0.0}, {'wellname': 'TH10110CH2', 'dailychanxi': 2.1}, {'wellname': 'TH10116CH', 'dailychanxi': 0.0}  ... displaying 10 of 116 total bound parameter sets ...  {'wellname': 'TK7-619CH', 'dailychanxi': 1.4}, {'wellname': 'TS3-3CH', 'dailychanxi': 1.3})]
(Background on this error at: http://sqlalche.me/e/14/gkpj)

2021-05-21 02:40:10,599 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (515, b"Cannot insert the value NULL into column 'date', table 'cyec.dbo.EcWellChanxiRealtimeAutoDaily'; column does not allow nulls. INSERT fails.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 477, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.IntegrityError: (515, b"Cannot insert the value NULL into column 'date', table 'cyec.dbo.EcWellChanxiRealtimeAutoDaily'; column does not allow nulls. INSERT fails.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 547, in extract_erchang_well_daily_monitor_data
    ExtractEcWellChanxiDataDay(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 639, in ExtractEcWellChanxiDataDay
    dailydata.to_sql(tablename, GlOBAL_mssql_engine_UTF8, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1419, in to_sql
    raise err
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 477, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.IntegrityError: (pymssql._pymssql.IntegrityError) (515, b"Cannot insert the value NULL into column 'date', table 'cyec.dbo.EcWellChanxiRealtimeAutoDaily'; column does not allow nulls. INSERT fails.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")
[SQL: INSERT INTO [EcWellChanxiRealtimeAutoDaily] (wellname, dailychanxi) VALUES (%(wellname)s, %(dailychanxi)s)]
[parameters: ({'wellname': 'S66', 'dailychanxi': 1.5}, {'wellname': 'S71', 'dailychanxi': -221.7}, {'wellname': 'S75-2CH', 'dailychanxi': 6553.5}, {'wellname': 'S88CH', 'dailychanxi': 1.0}, {'wellname': 'TH10108', 'dailychanxi': 6553.5}, {'wellname': 'TH10109CH', 'dailychanxi': 0.0}, {'wellname': 'TH10110CH2', 'dailychanxi': 2.1}, {'wellname': 'TH10116CH', 'dailychanxi': 0.0}  ... displaying 10 of 116 total bound parameter sets ...  {'wellname': 'TK7-619CH', 'dailychanxi': 1.4}, {'wellname': 'TS3-3CH', 'dailychanxi': 1.3})]
(Background on this error at: http://sqlalche.me/e/14/gkpj)

2021-05-21 02:40:50,090 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (515, b"Cannot insert the value NULL into column 'date', table 'cyec.dbo.EcWellChanxiRealtimeAutoDaily'; column does not allow nulls. INSERT fails.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 477, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.IntegrityError: (515, b"Cannot insert the value NULL into column 'date', table 'cyec.dbo.EcWellChanxiRealtimeAutoDaily'; column does not allow nulls. INSERT fails.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 547, in extract_erchang_well_daily_monitor_data
    ExtractEcWellChanxiDataDay(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 639, in ExtractEcWellChanxiDataDay
    dailydata.to_sql(tablename, GlOBAL_mssql_engine_UTF8, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1419, in to_sql
    raise err
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 477, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.IntegrityError: (pymssql._pymssql.IntegrityError) (515, b"Cannot insert the value NULL into column 'date', table 'cyec.dbo.EcWellChanxiRealtimeAutoDaily'; column does not allow nulls. INSERT fails.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")
[SQL: INSERT INTO [EcWellChanxiRealtimeAutoDaily] (wellname, dailychanxi) VALUES (%(wellname)s, %(dailychanxi)s)]
[parameters: ({'wellname': 'S66', 'dailychanxi': 1.5}, {'wellname': 'S71', 'dailychanxi': -221.7}, {'wellname': 'S75-2CH', 'dailychanxi': 6553.5}, {'wellname': 'S88CH', 'dailychanxi': 1.0}, {'wellname': 'TH10108', 'dailychanxi': 6553.5}, {'wellname': 'TH10109CH', 'dailychanxi': 0.0}, {'wellname': 'TH10110CH2', 'dailychanxi': 2.1}, {'wellname': 'TH10116CH', 'dailychanxi': 0.0}  ... displaying 10 of 116 total bound parameter sets ...  {'wellname': 'TK7-619CH', 'dailychanxi': 1.4}, {'wellname': 'TS3-3CH', 'dailychanxi': 1.3})]
(Background on this error at: http://sqlalche.me/e/14/gkpj)

2021-05-21 02:41:49,499 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (515, b"Cannot insert the value NULL into column 'date', table 'cyec.dbo.EcWellChanxiRealtimeAutoDaily'; column does not allow nulls. INSERT fails.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 477, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.IntegrityError: (515, b"Cannot insert the value NULL into column 'date', table 'cyec.dbo.EcWellChanxiRealtimeAutoDaily'; column does not allow nulls. INSERT fails.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 547, in extract_erchang_well_daily_monitor_data
    ExtractEcWellChanxiDataDay(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 639, in ExtractEcWellChanxiDataDay
    dailydata.to_sql(tablename, GlOBAL_mssql_engine_UTF8, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1419, in to_sql
    raise err
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 477, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.IntegrityError: (pymssql._pymssql.IntegrityError) (515, b"Cannot insert the value NULL into column 'date', table 'cyec.dbo.EcWellChanxiRealtimeAutoDaily'; column does not allow nulls. INSERT fails.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")
[SQL: INSERT INTO [EcWellChanxiRealtimeAutoDaily] (wellname, dailychanxi) VALUES (%(wellname)s, %(dailychanxi)s)]
[parameters: ({'wellname': 'S66', 'dailychanxi': 1.5}, {'wellname': 'S71', 'dailychanxi': -221.7}, {'wellname': 'S75-2CH', 'dailychanxi': 6553.5}, {'wellname': 'S88CH', 'dailychanxi': 1.0}, {'wellname': 'TH10108', 'dailychanxi': 6553.5}, {'wellname': 'TH10109CH', 'dailychanxi': 0.0}, {'wellname': 'TH10110CH2', 'dailychanxi': 2.1}, {'wellname': 'TH10116CH', 'dailychanxi': 0.0}  ... displaying 10 of 116 total bound parameter sets ...  {'wellname': 'TK7-619CH', 'dailychanxi': 1.4}, {'wellname': 'TS3-3CH', 'dailychanxi': 1.3})]
(Background on this error at: http://sqlalche.me/e/14/gkpj)

2021-05-25 00:11:44,286 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractEcWellChanxiDataHour(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 509, in ExtractEcWellChanxiDataHour
    sumrealtimedata["exsumchanxi"] = exsumrealtimedata.loc[:["sumchanxi"]]
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexing.py", line 895, in __getitem__
    return self._getitem_axis(maybe_callable, axis=axis)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexing.py", line 1102, in _getitem_axis
    return self._get_slice_axis(key, axis=axis)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexing.py", line 1137, in _get_slice_axis
    slice_obj.start, slice_obj.stop, slice_obj.step, kind="loc"
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 5277, in slice_indexer
    start_slice, end_slice = self.slice_locs(start, end, step=step, kind=kind)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 5482, in slice_locs
    end_slice = self.get_slice_bound(end, "right", kind)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 5390, in get_slice_bound
    slc = self.get_loc(label)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 3080, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas\_libs\index.pyx", line 70, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 75, in pandas._libs.index.IndexEngine.get_loc
TypeError: '['sumchanxi']' is an invalid key

2021-05-25 00:12:00,177 - logger - INFO - Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 3080, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas\_libs\index.pyx", line 70, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 101, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 4554, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 4562, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'sumchanxi'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractEcWellChanxiDataHour(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 509, in ExtractEcWellChanxiDataHour
    sumrealtimedata["exsumchanxi"] = exsumrealtimedata.loc[:("sumchanxi")]
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexing.py", line 895, in __getitem__
    return self._getitem_axis(maybe_callable, axis=axis)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexing.py", line 1102, in _getitem_axis
    return self._get_slice_axis(key, axis=axis)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexing.py", line 1137, in _get_slice_axis
    slice_obj.start, slice_obj.stop, slice_obj.step, kind="loc"
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 5277, in slice_indexer
    start_slice, end_slice = self.slice_locs(start, end, step=step, kind=kind)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 5482, in slice_locs
    end_slice = self.get_slice_bound(end, "right", kind)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 5396, in get_slice_bound
    raise err
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 5390, in get_slice_bound
    slc = self.get_loc(label)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 3082, in get_loc
    raise KeyError(key) from err
KeyError: 'sumchanxi'

2021-05-25 00:19:12,119 - logger - INFO - Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 3080, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas\_libs\index.pyx", line 70, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 101, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 4554, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 4562, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'sumchanxi'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractEcWellChanxiDataHour(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 509, in ExtractEcWellChanxiDataHour
    sumrealtimedata["exsumchanxi"] = exsumrealtimedata.loc[:"sumchanxi"]
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexing.py", line 895, in __getitem__
    return self._getitem_axis(maybe_callable, axis=axis)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexing.py", line 1102, in _getitem_axis
    return self._get_slice_axis(key, axis=axis)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexing.py", line 1137, in _get_slice_axis
    slice_obj.start, slice_obj.stop, slice_obj.step, kind="loc"
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 5277, in slice_indexer
    start_slice, end_slice = self.slice_locs(start, end, step=step, kind=kind)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 5482, in slice_locs
    end_slice = self.get_slice_bound(end, "right", kind)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 5396, in get_slice_bound
    raise err
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 5390, in get_slice_bound
    slc = self.get_loc(label)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 3082, in get_loc
    raise KeyError(key) from err
KeyError: 'sumchanxi'

2021-05-25 00:50:36,466 - logger - INFO - Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 3080, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas\_libs\index.pyx", line 70, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 101, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 4554, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 4562, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'exsumchanxi'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractEcWellChanxiDataHour(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 511, in ExtractEcWellChanxiDataHour
    sumrealtimedata = pd.concat([sumrealtimedata, exsumrealtimedata["exsumchanxi"]], axis=1, join='inner')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\frame.py", line 3024, in __getitem__
    indexer = self.columns.get_loc(key)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 3082, in get_loc
    raise KeyError(key) from err
KeyError: 'exsumchanxi'

2021-05-25 00:51:04,935 - logger - INFO - Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 3080, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas\_libs\index.pyx", line 70, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 101, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 4554, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 4562, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'exsumchanxi'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractEcWellChanxiDataHour(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 511, in ExtractEcWellChanxiDataHour
    sumrealtimedata = pd.concat([sumrealtimedata, exsumrealtimedata["exsumchanxi"]], axis=1, join='inner')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\frame.py", line 3024, in __getitem__
    indexer = self.columns.get_loc(key)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 3082, in get_loc
    raise KeyError(key) from err
KeyError: 'exsumchanxi'

2021-05-25 00:51:29,325 - logger - INFO - Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 3080, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas\_libs\index.pyx", line 70, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 101, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 4554, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 4562, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'exsumchanxi'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractEcWellChanxiDataHour(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 513, in ExtractEcWellChanxiDataHour
    sumrealtimedata = pd.concat([sumrealtimedata, exsumrealtimedata["exsumchanxi"]], axis=1, join='inner')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\frame.py", line 3024, in __getitem__
    indexer = self.columns.get_loc(key)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 3082, in get_loc
    raise KeyError(key) from err
KeyError: 'exsumchanxi'

2021-05-25 00:57:51,094 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractEcWellChanxiDataHour(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 512, in ExtractEcWellChanxiDataHour
    sumrealtimedata = exsumrealtimedata.drop(columns=['time'])
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\frame.py", line 4315, in drop
    errors=errors,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 4153, in drop
    obj = obj._drop_axis(labels, axis, level=level, errors=errors)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 4188, in _drop_axis
    new_axis = axis.drop(labels, errors=errors)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\indexes\base.py", line 5591, in drop
    raise KeyError(f"{labels[mask]} not found in axis")
KeyError: "['time'] not found in axis"

2021-05-25 01:09:33,912 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (207, b"Invalid column name 'exsumchanxi'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (207, b"Invalid column name 'exsumchanxi'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractEcWellChanxiDataHour(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 545, in ExtractEcWellChanxiDataHour
    realtimedata.to_sql(tablename, GlOBAL_mssql_engine_UTF8, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1419, in to_sql
    raise err
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b"Invalid column name 'exsumchanxi'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")
[SQL: INSERT INTO [EcWellChanxiRealtimeAutoHour] (wellname, compname, exportstation, chanxistation, area, prostatus, ischanxi, hourchanxi, basedata, sumchanxi, exsumchanxi, diffhourchanxi, time) VALUES (%(wellname)s, %(compname)s, %(exportstation)s, %(chanxistation)s, %(area)s, %(prostatus)s, %(ischanxi)s, %(hourchanxi)s, %(basedata)s, %(sumchanxi)s, %(exsumchanxi)s, %(diffhourchanxi)s, %(time)s)]
[parameters: ({'wellname': 'AD10CH2', 'compname': '管理二区', 'exportstation': '12-1计', 'chanxistation': '12-1计', 'area': '塔河十二区', 'prostatus': '注水焖井', 'ischanxi': '掺稀', 'hourchanxi': 0.0, 'basedata': 0.0, 'sumchanxi': 0.0, 'exsumchanxi': 0.0, 'diffhourchanxi': 0.0, 'time': '2021-05-25 01:00:00'}, {'wellname': 'AD11CH2', 'compname': '管理二区', 'exportstation': '倒油', 'chanxistation': '12-1计（港西）', 'area': '塔河十二区', 'prostatus': '开井', 'ischanxi': '掺稀', 'hourchanxi': 0.0, 'basedata': None, 'sumchanxi': 0.0, 'exsumchanxi': 0.0, 'diffhourchanxi': 0.0, 'time': '2021-05-25 01:00:00'}, {'wellname': 'AD13CH', 'compname': '管理三区', 'exportstation': '12-12计', 'chanxistation': '12-12计', 'area': '塔河十二区', 'prostatus': '关井', 'ischanxi': '掺稀', 'hourchanxi': 0.0, 'basedata': None, 'sumchanxi': 0.0, 'exsumchanxi': 0.0, 'diffhourchanxi': 0.0, 'time': '2021-05-25 01:00:00'}, {'wellname': 'AD14', 'compname': '管理三区', 'exportstation': '12-10计', 'chanxistation': '12-10计（港西）', 'area': '塔河十二区', 'prostatus': '注水焖井', 'ischanxi': '掺稀', 'hourchanxi': 0.0, 'basedata': 0.0, 'sumchanxi': 3430.021, 'exsumchanxi': 3430.021, 'diffhourchanxi': 0.0, 'time': '2021-05-25 01:00:00'}, {'wellname': 'AD15', 'compname': '管理三区', 'exportstation': '12-11计', 'chanxistation': '12-11计', 'area': '塔河十二区', 'prostatus': '关井', 'ischanxi': '掺稀', 'hourchanxi': 0.0, 'basedata': 0.0, 'sumchanxi': 45.84, 'exsumchanxi': 45.84, 'diffhourchanxi': 0.0, 'time': '2021-05-25 01:00:00'}, {'wellname': 'AD16', 'compname': '管理三区', 'exportstation': '12-7计', 'chanxistation': '12-7计（港西）', 'area': '塔河十二区', 'prostatus': '关井', 'ischanxi': '掺稀', 'hourchanxi': 0.0, 'basedata': 0.0, 'sumchanxi': 0.0, 'exsumchanxi': 0.0, 'diffhourchanxi': 0.0, 'time': '2021-05-25 01:00:00'}, {'wellname': 'AD17', 'compname': '管理三区', 'exportstation': '12-11计', 'chanxistation': '12-11计', 'area': '塔河十二区', 'prostatus': '关井', 'ischanxi': '掺稀', 'hourchanxi': 0.0, 'basedata': 0.0, 'sumchanxi': 794.7818, 'exsumchanxi': 794.7818, 'diffhourchanxi': 0.0, 'time': '2021-05-25 01:00:00'}, {'wellname': 'AD19', 'compname': '管理三区', 'exportstation': 'AD20计', 'chanxistation': 'AD20罐区（港西）', 'area': '塔河十二区', 'prostatus': '开井', 'ischanxi': '掺稀', 'hourchanxi': 0.0, 'basedata': 0.0, 'sumchanxi': 19446.5723, 'exsumchanxi': 19446.5723, 'diffhourchanxi': 0.0, 'time': '2021-05-25 01:00:00'}  ... displaying 10 of 870 total bound parameter sets ...  {'wellname': 'TS3-3CH', 'compname': '管理三区', 'exportstation': '12-9计', 'chanxistation': '12-9计', 'area': '塔河十二区', 'prostatus': '关井', 'ischanxi': '掺稀', 'hourchanxi': 0.0, 'basedata': 0.0, 'sumchanxi': 814.7109, 'exsumchanxi': 814.7109, 'diffhourchanxi': 0.0, 'time': '2021-05-25 01:00:00'}, {'wellname': 'TS3CX', 'compname': '管理二区', 'exportstation': '10-8计', 'chanxistation': '10-8计', 'area': '塔河十区', 'prostatus': '开井', 'ischanxi': '掺稀', 'hourchanxi': 1.2185000000000004, 'basedata': 1.1, 'sumchanxi': 2519.2329, 'exsumchanxi': 2518.0081, 'diffhourchanxi': 1.2247999999999593, 'time': '2021-05-25 01:00:00'})]
(Background on this error at: http://sqlalche.me/e/14/f405)

2021-05-25 01:10:02,229 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (207, b"Invalid column name 'exsumchanxi'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (207, b"Invalid column name 'exsumchanxi'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractEcWellChanxiDataHour(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 545, in ExtractEcWellChanxiDataHour
    realtimedata.to_sql(tablename, GlOBAL_mssql_engine_UTF8, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1419, in to_sql
    raise err
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b"Invalid column name 'exsumchanxi'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")
[SQL: INSERT INTO [EcWellChanxiRealtimeAutoHour] (wellname, compname, exportstation, chanxistation, area, prostatus, ischanxi, hourchanxi, basedata, sumchanxi, exsumchanxi, diffhourchanxi, time) VALUES (%(wellname)s, %(compname)s, %(exportstation)s, %(chanxistation)s, %(area)s, %(prostatus)s, %(ischanxi)s, %(hourchanxi)s, %(basedata)s, %(sumchanxi)s, %(exsumchanxi)s, %(diffhourchanxi)s, %(time)s)]
[parameters: ({'wellname': 'AD10CH2', 'compname': '管理二区', 'exportstation': '12-1计', 'chanxistation': '12-1计', 'area': '塔河十二区', 'prostatus': '注水焖井', 'ischanxi': '掺稀', 'hourchanxi': 0.0, 'basedata': 0.0, 'sumchanxi': 0.0, 'exsumchanxi': 0.0, 'diffhourchanxi': 0.0, 'time': '2021-05-25 01:00:00'}, {'wellname': 'AD11CH2', 'compname': '管理二区', 'exportstation': '倒油', 'chanxistation': '12-1计（港西）', 'area': '塔河十二区', 'prostatus': '开井', 'ischanxi': '掺稀', 'hourchanxi': 0.0, 'basedata': None, 'sumchanxi': 0.0, 'exsumchanxi': 0.0, 'diffhourchanxi': 0.0, 'time': '2021-05-25 01:00:00'}, {'wellname': 'AD13CH', 'compname': '管理三区', 'exportstation': '12-12计', 'chanxistation': '12-12计', 'area': '塔河十二区', 'prostatus': '关井', 'ischanxi': '掺稀', 'hourchanxi': 0.0, 'basedata': None, 'sumchanxi': 0.0, 'exsumchanxi': 0.0, 'diffhourchanxi': 0.0, 'time': '2021-05-25 01:00:00'}, {'wellname': 'AD14', 'compname': '管理三区', 'exportstation': '12-10计', 'chanxistation': '12-10计（港西）', 'area': '塔河十二区', 'prostatus': '注水焖井', 'ischanxi': '掺稀', 'hourchanxi': 0.0, 'basedata': 0.0, 'sumchanxi': 3430.021, 'exsumchanxi': 3430.021, 'diffhourchanxi': 0.0, 'time': '2021-05-25 01:00:00'}, {'wellname': 'AD15', 'compname': '管理三区', 'exportstation': '12-11计', 'chanxistation': '12-11计', 'area': '塔河十二区', 'prostatus': '关井', 'ischanxi': '掺稀', 'hourchanxi': 0.0, 'basedata': 0.0, 'sumchanxi': 45.84, 'exsumchanxi': 45.84, 'diffhourchanxi': 0.0, 'time': '2021-05-25 01:00:00'}, {'wellname': 'AD16', 'compname': '管理三区', 'exportstation': '12-7计', 'chanxistation': '12-7计（港西）', 'area': '塔河十二区', 'prostatus': '关井', 'ischanxi': '掺稀', 'hourchanxi': 0.0, 'basedata': 0.0, 'sumchanxi': 0.0, 'exsumchanxi': 0.0, 'diffhourchanxi': 0.0, 'time': '2021-05-25 01:00:00'}, {'wellname': 'AD17', 'compname': '管理三区', 'exportstation': '12-11计', 'chanxistation': '12-11计', 'area': '塔河十二区', 'prostatus': '关井', 'ischanxi': '掺稀', 'hourchanxi': 0.0, 'basedata': 0.0, 'sumchanxi': 794.7818, 'exsumchanxi': 794.7818, 'diffhourchanxi': 0.0, 'time': '2021-05-25 01:00:00'}, {'wellname': 'AD19', 'compname': '管理三区', 'exportstation': 'AD20计', 'chanxistation': 'AD20罐区（港西）', 'area': '塔河十二区', 'prostatus': '开井', 'ischanxi': '掺稀', 'hourchanxi': 0.0, 'basedata': 0.0, 'sumchanxi': 19446.5723, 'exsumchanxi': 19446.5723, 'diffhourchanxi': 0.0, 'time': '2021-05-25 01:00:00'}  ... displaying 10 of 870 total bound parameter sets ...  {'wellname': 'TS3-3CH', 'compname': '管理三区', 'exportstation': '12-9计', 'chanxistation': '12-9计', 'area': '塔河十二区', 'prostatus': '关井', 'ischanxi': '掺稀', 'hourchanxi': 0.0, 'basedata': 0.0, 'sumchanxi': 814.7109, 'exsumchanxi': 814.7109, 'diffhourchanxi': 0.0, 'time': '2021-05-25 01:00:00'}, {'wellname': 'TS3CX', 'compname': '管理二区', 'exportstation': '10-8计', 'chanxistation': '10-8计', 'area': '塔河十区', 'prostatus': '开井', 'ischanxi': '掺稀', 'hourchanxi': 1.2185000000000004, 'basedata': 1.1, 'sumchanxi': 2519.2329, 'exsumchanxi': 2518.0081, 'diffhourchanxi': 1.2247999999999593, 'time': '2021-05-25 01:00:00'})]
(Background on this error at: http://sqlalche.me/e/14/f405)

2021-05-25 01:10:15,940 - logger - INFO - Traceback (most recent call last):
  File "src\pymssql\_pymssql.pyx", line 460, in pymssql._pymssql.Cursor.execute
  File "src\pymssql\_mssql.pyx", line 1104, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1135, in pymssql._mssql.MSSQLConnection.execute_query
  File "src\pymssql\_mssql.pyx", line 1268, in pymssql._mssql.MSSQLConnection.format_and_run_query
  File "src\pymssql\_mssql.pyx", line 1806, in pymssql._mssql.check_cancel_and_raise
  File "src\pymssql\_mssql.pyx", line 1852, in pymssql._mssql.raise_MSSQLDatabaseException
pymssql._mssql.MSSQLDatabaseException: (207, b"Invalid column name 'exsumchanxi'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
pymssql._pymssql.ProgrammingError: (207, b"Invalid column name 'exsumchanxi'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 396, in extract_erchang_well_hour_monitor_data
    ExtractEcWellChanxiDataHour(exhour)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 545, in ExtractEcWellChanxiDataHour
    realtimedata.to_sql(tablename, GlOBAL_mssql_engine_UTF8, if_exists='append')
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\generic.py", line 2789, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 610, in to_sql
    method=method,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1419, in to_sql
    raise err
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1411, in to_sql
    table.insert(chunksize, method=method)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 845, in insert
    exec_insert(conn, keys, chunk_iter)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 762, in _execute_insert
    conn.execute(self.table.insert(), data)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1201, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\sql\elements.py", line 314, in _execute_on_connection
    self, multiparams, params, execution_options
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1400, in _execute_clauseelement
    cache_hit=cache_hit,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1750, in _execute_context
    e, statement, parameters, cursor, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1931, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 1687, in _execute_context
    cursor, statement, parameters, context
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 714, in do_executemany
    cursor.executemany(statement, parameters)
  File "src\pymssql\_pymssql.pyx", line 486, in pymssql._pymssql.Cursor.executemany
  File "src\pymssql\_pymssql.pyx", line 475, in pymssql._pymssql.Cursor.execute
sqlalchemy.exc.ProgrammingError: (pymssql._pymssql.ProgrammingError) (207, b"Invalid column name 'exsumchanxi'.DB-Lib error message 20018, severity 16:\nGeneral SQL Server error: Check messages from the SQL Server\n")
[SQL: INSERT INTO [EcWellChanxiRealtimeAutoHour] (wellname, compname, exportstation, chanxistation, area, prostatus, ischanxi, hourchanxi, basedata, sumchanxi, exsumchanxi, diffhourchanxi, time) VALUES (%(wellname)s, %(compname)s, %(exportstation)s, %(chanxistation)s, %(area)s, %(prostatus)s, %(ischanxi)s, %(hourchanxi)s, %(basedata)s, %(sumchanxi)s, %(exsumchanxi)s, %(diffhourchanxi)s, %(time)s)]
[parameters: ({'wellname': 'AD10CH2', 'compname': '管理二区', 'exportstation': '12-1计', 'chanxistation': '12-1计', 'area': '塔河十二区', 'prostatus': '注水焖井', 'ischanxi': '掺稀', 'hourchanxi': 0.0, 'basedata': 0.0, 'sumchanxi': 0.0, 'exsumchanxi': 0.0, 'diffhourchanxi': 0.0, 'time': '2021-05-25 01:00:00'}, {'wellname': 'AD11CH2', 'compname': '管理二区', 'exportstation': '倒油', 'chanxistation': '12-1计（港西）', 'area': '塔河十二区', 'prostatus': '开井', 'ischanxi': '掺稀', 'hourchanxi': 0.0, 'basedata': None, 'sumchanxi': 0.0, 'exsumchanxi': 0.0, 'diffhourchanxi': 0.0, 'time': '2021-05-25 01:00:00'}, {'wellname': 'AD13CH', 'compname': '管理三区', 'exportstation': '12-12计', 'chanxistation': '12-12计', 'area': '塔河十二区', 'prostatus': '关井', 'ischanxi': '掺稀', 'hourchanxi': 0.0, 'basedata': None, 'sumchanxi': 0.0, 'exsumchanxi': 0.0, 'diffhourchanxi': 0.0, 'time': '2021-05-25 01:00:00'}, {'wellname': 'AD14', 'compname': '管理三区', 'exportstation': '12-10计', 'chanxistation': '12-10计（港西）', 'area': '塔河十二区', 'prostatus': '注水焖井', 'ischanxi': '掺稀', 'hourchanxi': 0.0, 'basedata': 0.0, 'sumchanxi': 3430.021, 'exsumchanxi': 3430.021, 'diffhourchanxi': 0.0, 'time': '2021-05-25 01:00:00'}, {'wellname': 'AD15', 'compname': '管理三区', 'exportstation': '12-11计', 'chanxistation': '12-11计', 'area': '塔河十二区', 'prostatus': '关井', 'ischanxi': '掺稀', 'hourchanxi': 0.0, 'basedata': 0.0, 'sumchanxi': 45.84, 'exsumchanxi': 45.84, 'diffhourchanxi': 0.0, 'time': '2021-05-25 01:00:00'}, {'wellname': 'AD16', 'compname': '管理三区', 'exportstation': '12-7计', 'chanxistation': '12-7计（港西）', 'area': '塔河十二区', 'prostatus': '关井', 'ischanxi': '掺稀', 'hourchanxi': 0.0, 'basedata': 0.0, 'sumchanxi': 0.0, 'exsumchanxi': 0.0, 'diffhourchanxi': 0.0, 'time': '2021-05-25 01:00:00'}, {'wellname': 'AD17', 'compname': '管理三区', 'exportstation': '12-11计', 'chanxistation': '12-11计', 'area': '塔河十二区', 'prostatus': '关井', 'ischanxi': '掺稀', 'hourchanxi': 0.0, 'basedata': 0.0, 'sumchanxi': 794.7818, 'exsumchanxi': 794.7818, 'diffhourchanxi': 0.0, 'time': '2021-05-25 01:00:00'}, {'wellname': 'AD19', 'compname': '管理三区', 'exportstation': 'AD20计', 'chanxistation': 'AD20罐区（港西）', 'area': '塔河十二区', 'prostatus': '开井', 'ischanxi': '掺稀', 'hourchanxi': 0.0, 'basedata': 0.0, 'sumchanxi': 19446.5723, 'exsumchanxi': 19446.5723, 'diffhourchanxi': 0.0, 'time': '2021-05-25 01:00:00'}  ... displaying 10 of 870 total bound parameter sets ...  {'wellname': 'TS3-3CH', 'compname': '管理三区', 'exportstation': '12-9计', 'chanxistation': '12-9计', 'area': '塔河十二区', 'prostatus': '关井', 'ischanxi': '掺稀', 'hourchanxi': 0.0, 'basedata': 0.0, 'sumchanxi': 814.7109, 'exsumchanxi': 814.7109, 'diffhourchanxi': 0.0, 'time': '2021-05-25 01:00:00'}, {'wellname': 'TS3CX', 'compname': '管理二区', 'exportstation': '10-8计', 'chanxistation': '10-8计', 'area': '塔河十区', 'prostatus': '开井', 'ischanxi': '掺稀', 'hourchanxi': 1.2185000000000004, 'basedata': 1.1, 'sumchanxi': 2519.2329, 'exsumchanxi': 2518.0081, 'diffhourchanxi': 1.2247999999999593, 'time': '2021-05-25 01:00:00'})]
(Background on this error at: http://sqlalche.me/e/14/f405)

2021-05-26 17:50:05,199 - logger - INFO - Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3142, in _wrap_pool_connect
    return fn()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 301, in connect
    return _ConnectionFairy._checkout(self)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 761, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 419, in checkout
    rec = pool._do_get()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\impl.py", line 145, in _do_get
    self._dec_overflow()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\langhelpers.py", line 72, in __exit__
    with_traceback=exc_tb,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\impl.py", line 142, in _do_get
    return self._create_connection()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 247, in _create_connection
    return _ConnectionRecord(self)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 362, in __init__
    self.__connect()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 605, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\langhelpers.py", line 72, in __exit__
    with_traceback=exc_tb,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 599, in __connect
    connection = pool._invoke_creator(self)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\create.py", line 578, in connect
    return dialect.connect(*cargs, **cparams)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 584, in connect
    return self.dbapi.connect(*cargs, **cparams)
cx_Oracle.DatabaseError: ORA-01017: invalid username/password; logon denied

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 282, in extract_erchang_well_assay_data
    ExtractErchangWellTestData(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 306, in ExtractErchangWellTestData
    yemiandata = pd.read_sql(get_data_sql, GlOBAL_oracle_engine_bupro)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 527, in read_sql
    chunksize=chunksize,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1308, in read_query
    result = self.execute(*args)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1176, in execute
    return self.connectable.execution_options().execute(*args, **kwargs)
  File "<string>", line 2, in execute
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\deprecations.py", line 390, in warned
    return fn(*args, **kwargs)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3037, in execute
    connection = self.connect(close_with_result=True)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3096, in connect
    return self._connection_cls(self, close_with_result=close_with_result)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 92, in __init__
    else engine.raw_connection()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3175, in raw_connection
    return self._wrap_pool_connect(self.pool.connect, _connection)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3146, in _wrap_pool_connect
    e, dialect, self
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 2005, in _handle_dbapi_exception_noconnection
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3142, in _wrap_pool_connect
    return fn()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 301, in connect
    return _ConnectionFairy._checkout(self)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 761, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 419, in checkout
    rec = pool._do_get()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\impl.py", line 145, in _do_get
    self._dec_overflow()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\langhelpers.py", line 72, in __exit__
    with_traceback=exc_tb,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\impl.py", line 142, in _do_get
    return self._create_connection()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 247, in _create_connection
    return _ConnectionRecord(self)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 362, in __init__
    self.__connect()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 605, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\langhelpers.py", line 72, in __exit__
    with_traceback=exc_tb,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 599, in __connect
    connection = pool._invoke_creator(self)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\create.py", line 578, in connect
    return dialect.connect(*cargs, **cparams)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 584, in connect
    return self.dbapi.connect(*cargs, **cparams)
sqlalchemy.exc.DatabaseError: (cx_Oracle.DatabaseError) ORA-01017: invalid username/password; logon denied
(Background on this error at: http://sqlalche.me/e/14/4xp6)

2021-05-26 17:52:00,271 - logger - INFO - Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3142, in _wrap_pool_connect
    return fn()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 301, in connect
    return _ConnectionFairy._checkout(self)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 761, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 419, in checkout
    rec = pool._do_get()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\impl.py", line 145, in _do_get
    self._dec_overflow()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\langhelpers.py", line 72, in __exit__
    with_traceback=exc_tb,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\impl.py", line 142, in _do_get
    return self._create_connection()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 247, in _create_connection
    return _ConnectionRecord(self)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 362, in __init__
    self.__connect()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 605, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\langhelpers.py", line 72, in __exit__
    with_traceback=exc_tb,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 599, in __connect
    connection = pool._invoke_creator(self)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\create.py", line 578, in connect
    return dialect.connect(*cargs, **cparams)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 584, in connect
    return self.dbapi.connect(*cargs, **cparams)
cx_Oracle.DatabaseError: ORA-01017: invalid username/password; logon denied

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 282, in extract_erchang_well_assay_data
    ExtractErchangWellTestData(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 306, in ExtractErchangWellTestData
    yemiandata = pd.read_sql(get_data_sql, GlOBAL_oracle_engine_bupro)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 527, in read_sql
    chunksize=chunksize,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1308, in read_query
    result = self.execute(*args)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1176, in execute
    return self.connectable.execution_options().execute(*args, **kwargs)
  File "<string>", line 2, in execute
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\deprecations.py", line 390, in warned
    return fn(*args, **kwargs)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3037, in execute
    connection = self.connect(close_with_result=True)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3096, in connect
    return self._connection_cls(self, close_with_result=close_with_result)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 92, in __init__
    else engine.raw_connection()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3175, in raw_connection
    return self._wrap_pool_connect(self.pool.connect, _connection)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3146, in _wrap_pool_connect
    e, dialect, self
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 2005, in _handle_dbapi_exception_noconnection
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3142, in _wrap_pool_connect
    return fn()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 301, in connect
    return _ConnectionFairy._checkout(self)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 761, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 419, in checkout
    rec = pool._do_get()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\impl.py", line 145, in _do_get
    self._dec_overflow()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\langhelpers.py", line 72, in __exit__
    with_traceback=exc_tb,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\impl.py", line 142, in _do_get
    return self._create_connection()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 247, in _create_connection
    return _ConnectionRecord(self)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 362, in __init__
    self.__connect()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 605, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\langhelpers.py", line 72, in __exit__
    with_traceback=exc_tb,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 599, in __connect
    connection = pool._invoke_creator(self)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\create.py", line 578, in connect
    return dialect.connect(*cargs, **cparams)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 584, in connect
    return self.dbapi.connect(*cargs, **cparams)
sqlalchemy.exc.DatabaseError: (cx_Oracle.DatabaseError) ORA-01017: invalid username/password; logon denied
(Background on this error at: http://sqlalche.me/e/14/4xp6)

2021-05-26 17:53:29,539 - logger - INFO - Traceback (most recent call last):
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3142, in _wrap_pool_connect
    return fn()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 301, in connect
    return _ConnectionFairy._checkout(self)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 761, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 419, in checkout
    rec = pool._do_get()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\impl.py", line 145, in _do_get
    self._dec_overflow()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\langhelpers.py", line 72, in __exit__
    with_traceback=exc_tb,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\impl.py", line 142, in _do_get
    return self._create_connection()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 247, in _create_connection
    return _ConnectionRecord(self)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 362, in __init__
    self.__connect()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 605, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\langhelpers.py", line 72, in __exit__
    with_traceback=exc_tb,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 599, in __connect
    connection = pool._invoke_creator(self)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\create.py", line 578, in connect
    return dialect.connect(*cargs, **cparams)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 584, in connect
    return self.dbapi.connect(*cargs, **cparams)
cx_Oracle.DatabaseError: ORA-01017: invalid username/password; logon denied

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 282, in extract_erchang_well_assay_data
    ExtractErchangWellTestData(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 306, in ExtractErchangWellTestData
    yemiandata = pd.read_sql(get_data_sql, GlOBAL_oracle_engine_bupro)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 527, in read_sql
    chunksize=chunksize,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1308, in read_query
    result = self.execute(*args)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\io\sql.py", line 1176, in execute
    return self.connectable.execution_options().execute(*args, **kwargs)
  File "<string>", line 2, in execute
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\deprecations.py", line 390, in warned
    return fn(*args, **kwargs)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3037, in execute
    connection = self.connect(close_with_result=True)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3096, in connect
    return self._connection_cls(self, close_with_result=close_with_result)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 92, in __init__
    else engine.raw_connection()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3175, in raw_connection
    return self._wrap_pool_connect(self.pool.connect, _connection)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3146, in _wrap_pool_connect
    e, dialect, self
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 2005, in _handle_dbapi_exception_noconnection
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\base.py", line 3142, in _wrap_pool_connect
    return fn()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 301, in connect
    return _ConnectionFairy._checkout(self)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 761, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 419, in checkout
    rec = pool._do_get()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\impl.py", line 145, in _do_get
    self._dec_overflow()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\langhelpers.py", line 72, in __exit__
    with_traceback=exc_tb,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\impl.py", line 142, in _do_get
    return self._create_connection()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 247, in _create_connection
    return _ConnectionRecord(self)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 362, in __init__
    self.__connect()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 605, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\langhelpers.py", line 72, in __exit__
    with_traceback=exc_tb,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\util\compat.py", line 211, in raise_
    raise exception
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\pool\base.py", line 599, in __connect
    connection = pool._invoke_creator(self)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\create.py", line 578, in connect
    return dialect.connect(*cargs, **cparams)
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\sqlalchemy\engine\default.py", line 584, in connect
    return self.dbapi.connect(*cargs, **cparams)
sqlalchemy.exc.DatabaseError: (cx_Oracle.DatabaseError) ORA-01017: invalid username/password; logon denied
(Background on this error at: http://sqlalche.me/e/14/4xp6)

2021-05-27 01:14:41,376 - logger - INFO - Traceback (most recent call last):
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 558, in extract_erchang_well_daily_monitor_data
    ExtractEcWellAutoIndicatorDataDay(exday)
  File "C:/PyWorkbench/EcDailyReport/RcReportDataServer.py", line 586, in ExtractEcWellAutoIndicatorDataDay
    shicedata = shicedata.groupby("wellname").mean()
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\groupby\groupby.py", line 1499, in mean
    numeric_only=numeric_only,
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\groupby\generic.py", line 1016, in _cython_agg_general
    how, alt=alt, numeric_only=numeric_only, min_count=min_count
  File "C:\PyWorkbench\EcDailyReport\venv\lib\site-packages\pandas\core\groupby\generic.py", line 1121, in _cython_agg_blocks
    raise DataError("No numeric types to aggregate")
pandas.core.base.DataError: No numeric types to aggregate

